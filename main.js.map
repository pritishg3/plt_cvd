{"version":3,"sources":["./src/environments/environment.ts","./src/app/data.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/get-cvdata.service.ts","./src/app/display-cvd-info/display-cvd-info.component.ts","./src/app/display-cvd-info/display-cvd-info.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCWkW-a6KhqH4IUuC_ZyhCGeH67QPwuNcU\",\r\n    authDomain: \"historydata-e4765.firebaseapp.com\",\r\n    projectId: \"historydata-e4765\",\r\n    storageBucket: \"historydata-e4765.appspot.com\",\r\n    messagingSenderId: \"930270480954\",\r\n    appId: \"1:930270480954:web:eb144cef026d6620134303\",\r\n    measurementId: \"G-PH97GR8ESB\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  endpoint = 'http://localhost:3000/';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getIndiaData(): Observable<any> {\r\n    return this.http.get('https://api.covid19india.org/data.json').pipe((response) => response);\r\n  }\r\n\r\n  // response type is added here is: to saolve the problem of json parsing from http module.\r\n  getWorldData(): Observable<any> {\r\n    return this.http.get('https://covid.ourworldindata.org/data/owid-covid-data.json', {responseType: 'text'}).pipe((response) => response);\r\n  }\r\n\r\n  getNodejsWrldData(): Observable<any> {\r\n    const api = `${this.endpoint}/wrlddata`;\r\n    return this.http.get(api);\r\n  }\r\n\r\n  getIndianStateData(): Observable<any> {\r\n    return this.http.get('https://api.covid19india.org/v4/timeseries.json', {responseType: 'text'}).pipe((response) => response);\r\n  }\r\n\r\n  getIndianDistrictData() {\r\n    let url = 'https://api.covid19india.org/state_district_wise.json'  \r\n    return this.http.get(url, {responseType: 'text'}).pipe((response) => response); \r\n  }\r\n\r\n  getIndianDistrictTimeSeriesData() {\r\n    let url = 'https://api.covid19india.org/v4/min/data-all.min.json'\r\n    return this.http.get(url, {responseType: 'text'}).pipe((response) => response);\r\n  }\r\n\r\n  getCurrentWorldDataByCountry(cntryName = 'India') {\r\n     //let url = 'https://covid2019-api.herokuapp.com/v2/country/' + cntryName;\r\n     let url = 'https://covid2019-api.herokuapp.com/v2/current';\r\n     return this.http.get(url, {responseType: 'json'}).pipe((response) => response);\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'plotCVDline';\r\n  messageTOSendP = 'Parent message';\r\n  messageFromChild = 'Nothing';\r\n\r\n  getMessage(message: string): void {\r\n     this.messageFromChild = message;\r\n  }\r\n\r\n}\r\n","<div>\r\n  <!--Message from child : {{ messageFromChild  }} -->\r\n\r\n  <!--<a href='data'>Show COVID Data Graphs</a>\r\n  &nbsp; &nbsp;\r\n  <a href='control'>Show Enable disable demo</a>\r\n  &nbsp; &nbsp;\r\n  <a href='graph'>Show Graph python demo</a> --!>\r\n  <!--<app-line-chart [receivedParentMessage] = 'title' (messagetosendC) = 'getMessage($event)' ></app-line-chart>-->\r\n\r\n  <app-display-cvd-info></app-display-cvd-info>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GetCVDataService } from './get-cvdata.service';\r\nimport { DataService } from './data.service';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { DisplayCvdInfoComponent } from './display-cvd-info/display-cvd-info.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n//import { AngularFireModule } from '@angular/fire';\r\n//import { AngularFirestoreModule } from '@angular/fire/firestore';\r\n//import { AngularFireStorageModule } from '@angular/fire/storage';\r\n//import { AngularFireAuthModule } from '@angular/fire/auth';\r\n//import { environment } from '../environments/environment';\r\n\r\n/*import { MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatSliderModule} from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'; \r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon' */\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DisplayCvdInfoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ChartsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n  //  AngularFireModule.initializeApp(environment.firebaseConfig), // imports firebase/app needed for everything\r\n    //AngularFirestoreModule, // imports firebase/firestore, only needed for database features\r\n    //AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\r\n    //AngularFireStorageModule \r\n    //AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    /*MatAutocompleteModule,\r\n     MatButtonModule,\r\n     MatCheckboxModule,\r\n     MatDatepickerModule,\r\n     MatFormFieldModule,\r\n     MatInputModule,\r\n     MatRadioModule,\r\n     MatSelectModule,\r\n     MatSliderModule,\r\n     MatSlideToggleModule,\r\n     MatExpansionModule,\r\n     MatGridListModule,\r\n     MatIconModule */\r\n  ],\r\n  providers: [GetCVDataService, DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subscription, throwError} from 'rxjs';\r\nimport { catchError, map} from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetCVDataService {\r\n\r\n  endpoint = 'http://localhost:3000/';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  listData = [];\r\n  constructor(public http: HttpClient, public router: Router) { }\r\n\r\n  getCVData(cntry): Observable<object> {\r\n    const api = `${this.endpoint}/cvd_newcases/${cntry}`;\r\n    return this.http.get(api);\r\n  }\r\n\r\n  getTimedata(cntry): Observable<object> {\r\n    const api = `${this.endpoint}/covid_19_timeseries/${cntry}`;\r\n    return this.http.get(api, { headers: this.headers });\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DataService} from '../data.service';\r\nimport { TotalData } from '../modelcvdData';\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, Label } from 'ng2-charts';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map, toArray } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport * as Papa from 'papaparse';\r\n//import { OldStatSerService } from '../old-stat-ser.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-display-cvd-info',\r\n  templateUrl: './display-cvd-info.component.html',\r\n  styleUrls: ['./display-cvd-info.component.css'],\r\n  providers: [DatePipe]\r\n})\r\nexport class DisplayCvdInfoComponent implements OnInit, OnDestroy {\r\n  completeCVDData: TotalData;\r\n  newCases = [];\r\n  onlyIndiaNwCases = [];\r\n  onlyIndDates = [];\r\n  onlyIndiaRecovered = '';\r\n  grNewCases = [];\r\n  categoryOfGraph = 'nc';\r\n  dates = [];\r\n\r\n  // ----Preparing graph data structure --------------------\r\n  lineChartData: ChartDataSets[] = [\r\n    { data: [], label: '' },\r\n  ];\r\n\r\n  lineChartLabels: Label[] = [];\r\n\r\n  lineChartOptions = {\r\n    responsive: true,   \r\n    scales: {\r\n      xAxes: [{\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Date'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Number of New cases'\r\n        }\r\n      }]\r\n    }\r\n  };\r\n\r\n  lineChartColors: Color[] = [\r\n    {\r\n      borderColor: 'black',\r\n      backgroundColor: 'rgba(255,255,0,0.28)',\r\n    },\r\n  ];\r\n\r\n  lineChartLegend = true;\r\n  lineChartPlugins = [];\r\n  lineChartType = 'line';\r\n\r\n  isSubmitted = false;\r\n  selectedS = 'Nothing';\r\n  selectedSg = '';\r\n  lstdata = [];\r\n  numTotalcases = 10;\r\n  isDaysModified = false;\r\n  // ----\r\n\r\n  // -----World data structure ----\r\n  cntryList = [];\r\n  stateList = [];\r\n  stateDatalst = [];\r\n  pctRecState: Number = 0;\r\n  lstOfLabels = ['Active', 'Confirmed', 'Deaths', 'Recoveries'];\r\n  lstOfTodayLabels = ['New cases','Deaths','Recoveries'];\r\n  isSDataClicked = false;\r\n  oldStateData = \"\";\r\n  isStateValueChanged = false;\r\n  completeWrldCVDdata: any;\r\n  lastdateNewVccnUpdated = '';\r\n  completeIndianStateData: any;\r\n  selectedWS = '';\r\n  selectedWSGr = '';\r\n  selectIS = '';\r\n  selectDist = '';\r\n  dictOfWorldCntryDates = {};\r\n  dictOfWorldCntryVaccine = {};\r\n  dictOfStateData = {};\r\n  neSelectedCntry = 'India';\r\n  numMaxCaseLimit: number;\r\n  apiURL = 'https://www.techiediaries.com/api/data.json';\r\n  ltThousandCases = {};\r\n  strStatenum : string;\r\n  dstNameNoteMap = {};\r\n  //dstActiveCaseMap = {};\r\n\r\n  // --- Indian states data structure --\r\n  \r\n  jsonTimeSeriesDstdata:any;\r\n  someLastDateArray = [];\r\n  indCurrConf = '';\r\n  indCurrRec = '';\r\n  yestConf='';\r\n  yestDeaths='';\r\n  yestRec='';\r\n  yestDate;\r\n  isDisplayYestClicked = false;\r\n\r\n  mapOfStateShorts =\r\n  {\r\n    'Andaman and Nicobar Islands': 'AN',\r\n    'Andhra Pradesh': 'AP',\r\n    'Arunachal Pradesh': 'AR',\r\n    'Assam': 'AS',\r\n    'Bihar': 'BR',\r\n    'Chandigarh': 'CH',\r\n    'Chhattisgarh': 'CT',\r\n    'Dadra and Nagar Haveli': 'DN',\r\n    'Daman and Diu': 'DD',\r\n    'Delhi': 'DL',\r\n    'Goa': 'GA',\r\n    'Gujarat': 'GJ',\r\n    'Haryana': 'HR',\r\n    'Himachal Pradesh': 'HP',\r\n    'Jammu and Kashmir': 'JK',\r\n    'Jharkhand': 'JH',\r\n    'Karnataka': 'KA',\r\n    'Kerala': 'KL',\r\n    'Lakshadweep': 'LD',\r\n    'Madhya Pradesh': 'MP',\r\n    'Maharashtra': 'MH',\r\n    'Manipur': 'MN',\r\n    'Meghalaya': 'ML',\r\n    'Mizoram': 'MZ',\r\n    'Nagaland': 'NL',\r\n    'Odisha': 'OR',\r\n    'Puducherry': 'PY',\r\n    'Punjab': 'PB',\r\n    'Rajasthan': 'RJ',\r\n    'Sikkim': 'SK',\r\n    'Tamil Nadu': 'TN',\r\n    'Telangana': 'TG',\r\n    'Tripura': 'TR',\r\n    'Uttar Pradesh': 'UP',\r\n    'Uttarakhand': 'UT',\r\n    'West Bengal': 'WB'\r\n  };\r\n\r\n  \r\n\r\n  tiles = [\r\n    // {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    // {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    // {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    // {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n    {text: 'One', cols: 1, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 1, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 1, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Five', cols: 1, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Six', cols: 1, rows: 1, color: '#DDBDF1'},\r\n    {text: 'Seven', cols: 2, rows: 1, color: '#DDBDF1'}\r\n  ];\r\n\r\n  StateCodeMapobj = {\r\n   'Andaman and Nicobar Islands': 'AN' , \r\n   'Andhra Pradesh': 'AP' ,\r\n   'Arunachal Pradesh': 'AR' ,  \r\n   'Assam': 'AS', \r\n   'Bihar':'BR' ,\r\n   'Chandigarh':'CH' , \r\n   'Chhattisgarh': 'CT' ,\r\n   'Delhi':'DL' ,\r\n   'Dadra and Nagar Haveli and Daman and Diu':'DN',\r\n   'Goa': 'GA' ,\r\n   'Gujarat':'GJ',\r\n   'Himachal Pradesh':'HP',\r\n   'Haryana': 'HR',\r\n   'Jharkhand': 'JH',\r\n   'Jammu and Kashmir': 'JK',\r\n   'Karnataka':  'KA', \r\n   'Kerala': 'KL',\r\n   'Ladakh': 'LA',\r\n   'Lakshadweep': 'LD', \r\n   'Maharashtra': 'MH' ,\r\n   'Meghalaya': 'ML', \r\n   'Manipur': 'MN', \r\n   'Madhya Pradesh':'MP',  \r\n   'Mizoram': 'MZ', \r\n   'Nagaland':'NL', \r\n   'Odisha': 'OR',\r\n   'Punjab': 'PB',\r\n   'Puducherry': 'PY', \r\n   'Rajasthan': 'RJ', \r\n   'Sikkim':'SK', \r\n   'Telangana': 'TG',\r\n   'Tamil Nadu': 'TN',\r\n   'Tripura': 'TR', \r\n   'Uttar Pradesh': 'UP',\r\n   'Uttarakhand': 'UT',\r\n   'West Bengal': 'WB' \r\n  };\r\n    \r\n    \r\n  mapOfStateImages =\r\n  {\r\n    'India': 'https://www.clipartkey.com/mpngs/m/240-2404321_india-map-png-pic-map-of-india-hd.png',\r\n    'Andaman and Nicobar Islands': 'https://www.onefivenine.com/images/StateMaps/Andaman%20&%20Nicobar%20Islands.jpg',\r\n    'Andhra Pradesh': 'https://upload.wikimedia.org/wikipedia/commons/3/36/Location_map_India_Andhra_Pradesh.png',\r\n    'Arunachal Pradesh': 'https://www.arunachalpradesh.gov.in/wp-content/uploads/2017/08/anjaw.png',\r\n    'Assam': 'https://paintmaps.com/og_image/map_chart/map_chart_238c.png',\r\n    'Bihar': 'https://freepikpsd.com/wp-content/uploads/2019/10/bihar-map-png-8-Transparent-Images.png',\r\n    'Chandigarh': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSw0yiG_ee--SPgNt7w64lP5n6fSeleHsLM1Q&usqp=CAU',\r\n    'Chhattisgarh': 'https://img.favpng.com/8/2/6/naya-raipur-chhattisgarh-board-of-secondary-education-states-and-territories-of-india-map-png-favpng-nE0EGwcmhPxhSTnaq8v597axM.jpg',\r\n    'Dadra and Nagar Haveli': 'https://i.pinimg.com/originals/ac/2a/83/ac2a832038303eb1f699661eac4fa086.png',\r\n    'Daman and Diu': 'https://i.pinimg.com/originals/d7/21/90/d7219074deabd84c6b4bbbeb9dd8c62e.png',\r\n    'Delhi': 'https://upload.wikimedia.org/wikipedia/commons/8/81/Delhi_Lok_Sabha_election_result.png',\r\n    'Goa': 'https://i.pinimg.com/originals/66/a7/84/66a784c992b1da5722de5bca3db20b29.png',\r\n    'Gujarat': 'https://diligentias.com/wp-content/uploads/2019/05/gujarat.png',\r\n    'Haryana': 'https://banner2.cleanpng.com/20180621/oqq/kisspng-haryana-map-punjab-hindi-ssc-combined-graduate-lev-5b2bee23b42788.0031033215296056677379.jpg',\r\n    'Himachal Pradesh': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Himachal_Pradesh_district_map.png/1200px-Himachal_Pradesh_district_map.png',\r\n    'Jammu and Kashmir': 'https://miro.medium.com/max/2612/1*ZsFrLv0hNtRfgZvo1nRM7w.png',\r\n    'Jharkhand': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Jharkhand.png/800px-Jharkhand.png',\r\n    'Karnataka': 'https://upload.wikimedia.org/wikipedia/commons/a/a1/Karnataka-district-blank.png',\r\n    'Kerala': 'https://upload.wikimedia.org/wikipedia/te/2/2a/Kerala-COVID-19-map.png',\r\n    'Lakshadweep': 'https://i.pinimg.com/originals/52/76/17/5276175936a828dcc5fc6ec6844775f3.png',\r\n    'Madhya Pradesh': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/India_Madhya_Pradesh_location_map.svg/1280px-India_Madhya_Pradesh_location_map.svg.png',\r\n    'Maharashtra': 'https://upload.wikimedia.org/wikipedia/commons/c/c8/Maharashtra_locator_map.png',\r\n    'Manipur': 'https://upload.wikimedia.org/wikipedia/commons/5/53/Manipur_districts_as.png',\r\n    'Meghalaya': 'https://www.mapsofindia.com/maps/meghalaya/meghalaya-index-map-2020.jpg',\r\n    'Mizoram': 'https://www.bragitoff.com/wp-content/uploads/2015/12/mizoram.png',\r\n    'Nagaland': 'https://upload.wikimedia.org/wikipedia/commons/0/07/Nagaland_Map.png',\r\n    'Odisha': 'https://upload.wikimedia.org/wikipedia/commons/f/f0/Odisha.png',\r\n    'Puducherry': 'https://www.wisevoter.org/assets/images/states/puducherry.png',\r\n    'Punjab': 'https://punjab.gov.in/wp-content/uploads/2019/12/District-map_eng.png',\r\n    'Rajasthan': 'https://img.favpng.com/8/3/2/jaipur-bikaner-udaipur-jodhpur-map-png-favpng-RuP9r8sqShYHeQrDYx1M23GP9.jpg',\r\n    'Sikkim': 'https://i.pinimg.com/originals/2f/81/f8/2f81f8a362df281f0a98520b04005ffd.png',\r\n    'Tamil Nadu': 'https://www.pngitem.com/pimgs/m/527-5271275_tamil-nadu-district-map-2019-hd-png-download.png',\r\n    'Telangana': 'https://upload.wikimedia.org/wikipedia/commons/d/d6/Telangana-map-mal.png',\r\n    'Tripura': 'https://www.onefivenine.com/images/StateMaps/Tripura.jpg',\r\n    'Uttar Pradesh': 'https://pbdindia.gov.in/assets/images/uttar-pradesh-map.png',\r\n    'Uttarakhand': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Uttarakhand_locator_map.svg/1250px-Uttarakhand_locator_map.svg.png',\r\n    'West Bengal': 'https://upload.wikimedia.org/wikipedia/commons/b/ba/Administrative_Divisions_Map_of_West_Bengal.png'\r\n  };\r\n  lstOfNwStateCases = [];\r\n  lstofNwStateRcvs = [];\r\n  lstOfNwStateVaccinations = [];\r\n  lstOfTotalStateVaccinations = [];\r\n  latestNwStateCase = '';\r\n  latestRcvdStateCase = '';\r\n  latestStateDatadate = '';\r\n  latestSTateDtNewCases = '';\r\n  latestStateDtRcvdCases = '';\r\n  latestSTateDtNewVccn = '';\r\n  latestStateDtTotalVccn = '';\r\n  latestStateDatanewVaccn = '';\r\n  lastetStateTotalVccn = '';\r\n  lstOfStateDates = [];\r\n  lstofSTateOrigdates = [];\r\n  mapOfStateDtandCnfCases = {};\r\n  mapOfStateLatestUpdateDate = {};\r\n  districtWiseCvdDataInd: any;\r\n  onlyDstData: any;\r\n  onlyDataIsArray: any;\r\n  currDstData: any = {};\r\n  lstofDistData = [];\r\n  lstofTodayDistData = [];\r\n  isEveryItemzeroTodaylstdata = false;\r\n  dstSpecificNote = '';\r\n //  myFinalObj = new Map();\r\n  lstMostActiveofObj = [];\r\n  isUserClickedDistData = false;\r\n  lstMostRecoveredObj = [];\r\n  vaccineDataLst = {};\r\n  vaccineStateMap = {};\r\n  noOfVaccineAdmin = '';\r\n  latestVaccineDate = '';\r\n  lstmostVaccineStates: any;\r\n  // ---- Graph data for states -------\r\n  lineChartDataStates: ChartDataSets[] = [\r\n    { data: [], label: '' },\r\n  ];\r\n\r\n  lineChartLabelsStates: Label[] = [];\r\n\r\n  lineChartOptionsStates: ChartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [{\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: ''\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Number of New cases'\r\n        }\r\n      }]\r\n    }\r\n  };\r\n\r\n  lineChartColorsStates: Color[] = [\r\n    {\r\n      borderColor: 'black',\r\n      backgroundColor: 'rgba(255,255,0,0.28)',\r\n    },\r\n  ];\r\n\r\n  lineChartLegendStates = true;\r\n  lineChartPluginsStates = [];\r\n  lineChartTypeStates = 'line';\r\n\r\n  nSelectedState = '';\r\n  isUserClickedStateGraph = false;\r\n  newCasesReportedWrld = '';\r\n  newCasesWrdDate = '';\r\n  newVaccnLatest = '';\r\n  msgVaccnnew = '';\r\n  totalVccnLatest = '';\r\n  mapOfCntryConsolidatedCases = {};\r\n  dateOFCntryConsolidatedCases = '';\r\n  tmpStampOfLatestUpdate : any;\r\n  dataWrldCnf = '';\r\n  dataWrldDeaths = '';\r\n  dataWrldRecvrd = '';\r\n  dataWrldActive = '';\r\n  recoveryRateWrld : Number = 0;\r\n  marqueeToggle = false;\r\n  // --------\r\n\r\n  constructor(private ds: DataService, private httpClient: HttpClient, private datePipe: DatePipe/*private oss: OldStatSerService*/) { }\r\n\r\n  onSubmit(numVal): void {\r\n    this.categoryOfGraph = 'nc';\r\n    this.numTotalcases = numVal;\r\n    this.isDaysModified = true;\r\n    this.refreshData();\r\n  }\r\n\r\n  refreshData(): void {\r\n    if (this.categoryOfGraph === 'nc') {\r\n      this.lineChartData[0].data = this.newCases.slice((this.newCases.length - this.numTotalcases), this.newCases.length);\r\n      this.lineChartData[0].label = 'Covid Analysis data for country: ' + this.neSelectedCntry;\r\n      this.lineChartLabels = this.dates.slice((this.dates.length - this.numTotalcases), this.dates.length);\r\n    }\r\n    else if (this.categoryOfGraph === 'gr') {\r\n      this.lineChartData[0].data = this.grNewCases.slice((this.grNewCases.length - this.numTotalcases), this.grNewCases.length);\r\n      this.lineChartData[0].label = 'Growth rate Covid Analysis data for country: ' + this.neSelectedCntry;\r\n      this.lineChartLabels = this.dates.slice((this.dates.length - this.numTotalcases), this.dates.length);\r\n    }\r\n   }\r\n\r\n   refreshDataStates(): void {\r\n      this.lineChartDataStates[0].data = this.lstOfNwStateCases\r\n                                             .slice((this.lstOfNwStateCases.length - this.numTotalcases), this.lstOfNwStateCases.length);\r\n      this.lineChartDataStates[0].label =  'Covid Analysis data for Indian State: ' + this.nSelectedState;\r\n      this.lineChartLabelsStates = this.lstOfStateDates;\r\n      let len = this.lstOfStateDates.length;\r\n                                       // .slice((this.lstOfStateDates.length - this.numTotalcases), this.lstOfStateDates.length);\r\n      this.lineChartOptionsStates.scales.xAxes[0].scaleLabel.labelString = 'Data of last ' + len + ' days';\r\n      if(this.lstOfNwStateCases[this.lstOfNwStateCases.length - 1] !== undefined) {\r\n        this.latestNwStateCase = this.lstOfNwStateCases[this.lstOfNwStateCases.length - 1];\r\n      }\r\n      else {\r\n        this.latestNwStateCase = '';\r\n      }\r\n\r\n      if(this.lstofNwStateRcvs[this.lstofNwStateRcvs.length - 1] !== undefined) {\r\n        this.latestRcvdStateCase = this.lstofNwStateRcvs[this.lstofNwStateRcvs.length - 1];\r\n      }\r\n      else {\r\n        this.latestRcvdStateCase = '';\r\n      }\r\n      let date = '';\r\n      if(this.lstofNwStateRcvs.length === this.lstofSTateOrigdates.length ||  \r\n        this.lstOfNwStateCases.length === this.lstofSTateOrigdates.length) {\r\n        date = this.lstofSTateOrigdates[this.lstofSTateOrigdates.length - 1];\r\n      }\r\n      else {\r\n        date = this.lstofSTateOrigdates[this.lstofSTateOrigdates.length - 2];\r\n      } \r\n      this.latestStateDatadate = date;\r\n      if(this.lstOfNwStateVaccinations[this.lstOfNwStateVaccinations.length - 1] !== undefined) {\r\n        this.latestStateDatanewVaccn = this.lstOfNwStateVaccinations[this.lstOfNwStateVaccinations.length - 1];\r\n      }\r\n      else {\r\n        this.latestStateDatanewVaccn = '';\r\n      }\r\n\r\n      if(this.lstOfTotalStateVaccinations[this.lstOfTotalStateVaccinations.length - 1] !== undefined) {\r\n        this.lastetStateTotalVccn = this.lstOfTotalStateVaccinations[this.lstOfTotalStateVaccinations.length - 1];\r\n      }\r\n      else {\r\n        this.lastetStateTotalVccn = '';\r\n      }\r\n      //console.log('lt of total vccn', this.lstOfTotalStateVaccinations)\r\n      //console.log(this.lstofSTateOrigdates);\r\n      // console.log('Date : ',date);\r\n      //console.log('Newly vaccinated peoples in state')\r\n      //console.log(this.latestStateDatanewVaccn);\r\n      //console.log('New state cases :');\r\n      //console.log(this.lstOfNwStateCases);\r\n    }\r\n  getMarqueeToggleOthers() {\r\n    this.marqueeToggle = false;\r\n  }\r\n  getMarqueeToggle() {\r\n    if(this.marqueeToggle === false) {\r\n      this.marqueeToggle = true;\r\n    }\r\n    else {\r\n      this.marqueeToggle = false;\r\n    }\r\n  }\r\n\r\n  onSubmitWorldData(cntryName): void {\r\n     this.neSelectedCntry = cntryName;\r\n     this.categoryOfGraph = 'nc';\r\n     if (cntryName !== undefined) {\r\n        if(cntryName === 'India') {\r\n          this.newCases = this.onlyIndiaNwCases;\r\n          this.dates = this.onlyIndDates;\r\n        }\r\n        else {\r\n          this.newCases = this.dictOfWorldCntryDates[cntryName][`nw_cases`];\r\n          this.dates = this.dictOfWorldCntryDates[cntryName][`dt`];\r\n        }\r\n        this.newCasesReportedWrld = this.newCases[this.newCases.length - 1];\r\n        if(Number(this.newCasesReportedWrld) === 0) {\r\n          this.newCasesReportedWrld = '';\r\n        }\r\n\r\n        this.newCasesWrdDate = this.dates[this.dates.length - 1];\r\n        //console.log('Latest new',this.newCasesReportedWrld);\r\n        if(this.dictOfWorldCntryDates[cntryName][`new_vccn`][this.dictOfWorldCntryDates[cntryName][`new_vccn`].length - 1]){\r\n          this.newVaccnLatest = this.dictOfWorldCntryDates[cntryName][`new_vccn`][this.dictOfWorldCntryDates[cntryName][`new_vccn`].length - 1];\r\n          if(this.dictOfWorldCntryDates[cntryName][`new_vccn`].length !== this.dates.length) {\r\n            this.msgVaccnnew = '*This information is last updated on date : ' + \r\n                                 this.lastdateNewVccnUpdated;                      \r\n          }\r\n          else {\r\n            this.msgVaccnnew = '';\r\n          }\r\n        }\r\n        else {\r\n          this.newVaccnLatest = '';\r\n          this.msgVaccnnew = 'Data not available';\r\n          //this.newVaccnLatest = 'Not available';\r\n        }\r\n\r\n        if(this.dictOfWorldCntryDates[cntryName][`total_vccn`][this.dictOfWorldCntryDates[cntryName][`total_vccn`].length - 1]){          \r\n          if(cntryName === 'India') {\r\n            this.totalVccnLatest = this.vaccineStateMap[`Total`];\r\n            if(this.totalVccnLatest === undefined || this.totalVccnLatest === '' || Number(this.totalVccnLatest) === 0 ) {\r\n              this.totalVccnLatest = this.dictOfWorldCntryDates[cntryName][`total_vccn`][this.dictOfWorldCntryDates[cntryName][`total_vccn`].length - 1]; \r\n            }\r\n            if(this.onlyIndiaNwCases[this.onlyIndiaNwCases.length-1] !== undefined && \r\n              this.onlyIndiaNwCases[this.onlyIndiaNwCases.length-1] !== '' && Number(this.onlyIndiaNwCases[this.onlyIndiaNwCases.length-1]) !== 0 ) {\r\n              this.newCasesReportedWrld = this.onlyIndiaNwCases[this.onlyIndiaNwCases.length-1];\r\n            }\r\n          }\r\n          else {\r\n             this.totalVccnLatest = this.dictOfWorldCntryDates[cntryName][`total_vccn`][this.dictOfWorldCntryDates[cntryName][`total_vccn`].length - 1];\r\n          }\r\n        }\r\n        else {\r\n          this.totalVccnLatest = 'Data Not available';\r\n        }\r\n\r\n        //console.log('vccn total wrld', this.totalVccnLatest)        \r\n        //=------ country specific data sets with current covid cases statistics ----    \r\n        if(this.mapOfCntryConsolidatedCases[cntryName]) {    \r\n           this.dataWrldCnf = this.mapOfCntryConsolidatedCases[cntryName][`confirmed`];\r\n           this.dataWrldRecvrd = this.mapOfCntryConsolidatedCases[cntryName][`recovered`];\r\n           this.dataWrldActive = this.mapOfCntryConsolidatedCases[cntryName][`active`];           \r\n           this.recoveryRateWrld = Number(((Number(this.dataWrldRecvrd) / Number(this.dataWrldCnf)) * 100).toFixed(2));           \r\n        }\r\n        else {\r\n          this.dataWrldCnf = ''; \r\n          this.dataWrldRecvrd = '';\r\n          this.dataWrldActive = '';\r\n          this.recoveryRateWrld = 0;\r\n        }\r\n\r\n        this.refreshData();\r\n     }\r\n  }\r\n\r\n  onSubmitWorldGrData(cntryName): void {\r\n    this.newCases = this.dictOfWorldCntryDates[cntryName][`nw_cases`];\r\n    this.dates = this.dictOfWorldCntryDates[cntryName][`dt`];\r\n    for ( let i = 0; i <= this.newCases.length; i++) {\r\n      if ( (i + 1) < this.newCases.length) {\r\n       const grTemp = this.newCases[i + 1] / this.newCases[i];\r\n       this.grNewCases.push(grTemp);\r\n      }\r\n    }\r\n    this.categoryOfGraph = 'gr';\r\n    this.refreshData();\r\n  }\r\n\r\n  onSubmitStateData(state): void {\r\n    this.isUserClickedStateGraph = true;\r\n    //this.isDaysModified = false;\r\n    const tmpVal = this.mapOfStateShorts[state];\r\n    this.nSelectedState = state;\r\n    this.lstOfNwStateCases = this.mapOfStateDtandCnfCases[tmpVal][`nw_cases`];\r\n    this.lstofNwStateRcvs = this.mapOfStateDtandCnfCases[tmpVal][`nw_rcvs`];\r\n    this.lstofSTateOrigdates = this.mapOfStateDtandCnfCases[tmpVal][`dt`];\r\n    this.lstOfNwStateVaccinations = this.mapOfStateDtandCnfCases[tmpVal][`nw_vcnated`];\r\n    this.lstOfStateDates = [];\r\n    for (let i = 0; i < this.numTotalcases; i++) {\r\n      this.lstOfStateDates.push(i + 1);\r\n    }\r\n    this.lstOfTotalStateVaccinations = this.mapOfStateDtandCnfCases[tmpVal][`total_vcnated`];\r\n    /*var x = document.getElementById(\"srvDistSection\");\r\n    if(this.selectIS !== this.oldStateData) {\r\n      this.isStateValueChanged = true;    \r\n      x.style.display = \"none\";    \r\n    }\r\n    else {\r\n      this.isStateValueChanged = false;\r\n      x.style.display = \"block\";\r\n    } */\r\n    // this.mapOfStateDtandCnfCases[tmpVal][`dt`];\r\n    this.isSDataClicked = true;\r\n    this.oldStateData = this.selectIS;\r\n    this.stateDatalst = this.dictOfStateData[state];   \r\n    let pctRecvd = Number(((Number(this.stateDatalst[3]) / Number(this.stateDatalst[1])) * 100).toFixed(2));\r\n    if(pctRecvd !== undefined && pctRecvd !== 0) {\r\n      this.pctRecState = pctRecvd;\r\n    }\r\n    else {\r\n      this.pctRecState = 0;\r\n    }\r\n    //console.log('Pct recvr state',this.pctRecState );\r\n\r\n    //this.refreshDists();\r\n\r\n    this.noOfVaccineAdmin = this.vaccineStateMap[this.selectIS];\r\n    this.latestVaccineDate = this.vaccineStateMap[`State`];\r\n    this.latestSTateDtNewCases = this.mapOfStateLatestUpdateDate[this.mapOfStateShorts[state]];\r\n    // console.log(this.mapOfStateLatestUpdateDate);\r\n    this.refreshDataStates();\r\n    this.refreshDists();    \r\n  }\r\n\r\n  refreshDists() {\r\n    //  ------ distruct wise code --- new one\r\n    let found = false;\r\n    this.dstSpecificNote = '';\r\n    this.dstNameNoteMap = {};\r\n    let dstActiveCaseMap = {};\r\n    let dstRecoverCaseMap = {};\r\n    let dstRecoveryRateMap = {};\r\n    for (let key of Object.keys(this.districtWiseCvdDataInd)) {\r\n      if(key === this.selectIS) {\r\n        found = true;\r\n        this.onlyDstData = this.districtWiseCvdDataInd[key][`districtData`];\r\n        for (let objk of Object.keys(this.onlyDstData)) {\r\n          this.currDstData[objk] = [];\r\n          for (let obk of Object.keys(this.onlyDstData[objk]) ){\r\n            if(obk === 'active') {\r\n              this.currDstData[objk].push(this.onlyDstData[objk][obk]);\r\n              dstActiveCaseMap[objk] = Number(this.onlyDstData[objk][obk]);\r\n            }\r\n            else if(obk === 'notes') {              \r\n              this.dstNameNoteMap[objk] = this.onlyDstData[objk][obk]; \r\n              //this.dstSpecificNote = this.onlyDstData[objk][obk];              \r\n            }\r\n            else if(obk === 'confirmed') {\r\n              this.currDstData[objk].push(this.onlyDstData[objk][obk]);\r\n            }\r\n            else if(obk === 'deceased') {\r\n              this.currDstData[objk].push(this.onlyDstData[objk][obk]);\r\n            }\r\n            else if(obk === 'recovered') {\r\n              this.currDstData[objk].push(this.onlyDstData[objk][obk]);\r\n              dstRecoverCaseMap[objk] = Number(this.onlyDstData[objk][obk]);\r\n              let rRateNum = (Number(this.onlyDstData[objk][obk]) / Number(this.onlyDstData[objk][`confirmed`])) * 100;\r\n              //console.log(rRateNum);\r\n              if(!isNaN(rRateNum)){\r\n                dstRecoveryRateMap[objk] = rRateNum.toFixed(2);\r\n              }\r\n            }\r\n            else if(obk === 'delta') {\r\n              for(let ob of Object.keys(this.onlyDstData[objk][obk])) {\r\n                if(ob === 'confirmed') {\r\n                  this.currDstData[objk].push(this.onlyDstData[objk][obk][ob]);\r\n                }\r\n                else if(ob === 'deceased') {\r\n                  this.currDstData[objk].push(this.onlyDstData[objk][obk][ob]);\r\n                }\r\n                else if(ob === 'recovered') {\r\n                  this.currDstData[objk].push(this.onlyDstData[objk][obk][ob]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }        \r\n      }\r\n      if(found === true) {\r\n        break;\r\n      }\r\n    }     \r\n    this.lstMostActiveofObj = this.getMostOfSomeAttributeData(dstActiveCaseMap);\r\n    this.lstMostRecoveredObj = this.getMostOfSomeAttributeData(dstRecoverCaseMap);\r\n    //console.log('recoveries are :');\r\n    //console.log(this.lstMostRecoveredObj);\r\n    //console.log('Rec rate is :');\r\n    //console.log(dstRecoveryRateMap);\r\n    this.lstMostRecoveredObj = [];\r\n    this.lstMostRecoveredObj = this.getMostOfSomeAttributeData(dstRecoveryRateMap);\r\n  }\r\n\r\n  getMostOfSomeAttributeData(objData, numRed = 5) {\r\n    let lsttmp = {};\r\n    lsttmp = Object.entries(objData)\r\n      .sort((a, b) => a[1] <= b[1] ? -1 : 1)\r\n      .reduce((acc, pair) => {\r\n        acc[pair[0]] = pair[1]\r\n        return acc\r\n    }, {});\r\n      //console.log(lsttmp); \r\n    let finalData = Object.keys(lsttmp).slice(Object.keys(lsttmp).length - numRed,Object.keys(lsttmp).length).map(key => ({[key]:lsttmp[key]}));\r\n    finalData.reverse();\r\n    return finalData;\r\n  }\r\n\r\n  // un-used function just to get the sorted n values by passing obj and nth number\r\n  sortObjectEntries(obj, n){ \r\n    let sortedList = []\r\n    //Sorting by values asc\r\n    sortedList = Object.entries(obj).sort((a,b)=>{\r\n          if(b[1] > a[1]) return 1;\r\n          else if(b[1] < a[1]) return -1;\r\n    //if values are same do edition checking if keys are in the right order\r\n          else {\r\n             if(a[0] > b[0]) return 1;\r\n             else if(a[0] < b[0]) return -1;\r\n             else return 0\r\n      }\r\n     })\r\n     // return first n values from sortedList\r\n      return sortedList.map(el=>el[0]).slice(0,n)\r\n  }\r\n\r\n  onSubmitDistData(distName) {\r\n    this.lstofDistData = [];\r\n    this.lstofTodayDistData = [];\r\n    this.dstSpecificNote = '';\r\n    this.isUserClickedDistData = true;\r\n    \r\n   // var x = document.getElementById(\"srvDistSection\");\r\n    \r\n   // x.style.display = \"block\";\r\n    \r\n\r\n     //this.lstofDistData = this.currDstData[distName];\r\n     for (let i=0; i< this.currDstData[distName].length; i++) {\r\n       if(i === 0 || i === 1 || i === 2 || i ===3) {\r\n         this.lstofDistData.push(this.currDstData[distName][i]);         \r\n       }\r\n       else if(i > 3) {\r\n         this.lstofTodayDistData.push(this.currDstData[distName][i]);\r\n       }\r\n     }\r\n     this.dstSpecificNote = this.dstNameNoteMap[distName];\r\n     this.isEveryItemzeroTodaylstdata = this.lstofTodayDistData.every(item => item ===0);\r\n     /*if (!this.isEveryItemzeroTodaylstdata) {\r\n      let record = {};\r\n      record['confm'] = this.lstofTodayDistData[0];\r\n      record['dth'] = this.lstofTodayDistData[1];\r\n      record['rcvs'] = this.lstofTodayDistData[2];\r\n      record['stname'] = distName;\r\n      this.oss.AddStat(record).then(resp => {       \r\n        console.log(resp);\r\n      })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n     } */\r\n\r\n     if(this.isEveryItemzeroTodaylstdata) {\r\n      let tempval = this.mapOfStateShorts[this.selectIS];\r\n     // console.log('Dtae array latest : ',this.someLastDateArray);\r\n      let date = new Date();\r\n      let latest_date =this.datePipe.transform(date, 'yyyy-MM-dd');\r\n     // console.log('Date : ',latest_date);\r\n     // console.log('Confirmed : ')\r\n\r\n      if(latest_date === this.someLastDateArray[0]) {\r\n        // console.log('in date if');\r\n        if(this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`] === undefined) {\r\n         this.yestConf = (this.jsonTimeSeriesDstdata[this.someLastDateArray[1]][tempval][`districts`][distName][`delta`][`confirmed`]);      \r\n         this.yestDeaths = (this.jsonTimeSeriesDstdata[this.someLastDateArray[1]][tempval][`districts`][distName][`delta`][`deceased`]);\r\n         this.yestRec = (this.jsonTimeSeriesDstdata[this.someLastDateArray[1]][tempval][`districts`][distName][`delta`][`recovered`]);\r\n        }\r\n        else {\r\n          this.yestConf = (this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`][`confirmed`]);      \r\n          this.yestDeaths = (this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`][`deceased`]);\r\n          this.yestRec = (this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`][`recovered`]);\r\n        }\r\n      }\r\n      else if(latest_date !== this.someLastDateArray[0]) {\r\n       // console.log('in date else if');\r\n        if(this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`] === undefined) {\r\n          this.yestConf = (this.jsonTimeSeriesDstdata[this.someLastDateArray[1]][tempval][`districts`][distName][`delta`][`confirmed`]);      \r\n          this.yestDeaths = (this.jsonTimeSeriesDstdata[this.someLastDateArray[1]][tempval][`districts`][distName][`delta`][`deceased`]);\r\n          this.yestRec = (this.jsonTimeSeriesDstdata[this.someLastDateArray[1]][tempval][`districts`][distName][`delta`][`recovered`]);\r\n         }\r\n         else {\r\n           this.yestConf = (this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`][`confirmed`]);      \r\n           this.yestDeaths = (this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`][`deceased`]);\r\n           this.yestRec = (this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][tempval][`districts`][distName][`delta`][`recovered`]);\r\n         }\r\n      }\r\n     }\r\n     else {\r\n      this.yestConf = ''; \r\n      this.yestDeaths = '';\r\n      this.yestRec ='';\r\n      this.isDisplayYestClicked = false;\r\n     }\r\n  }\r\n\r\n  toggleVisualYest() {\r\n    if(this.isDisplayYestClicked == false) {\r\n      this.isDisplayYestClicked = true;\r\n    }\r\n    else {\r\n      this.isDisplayYestClicked = false;\r\n    }\r\n  }\r\n\r\n  isDataOuDated(strVal) {\r\n    // console.log(strVal, \" : \", strVal.match(/out-dated/i));\r\n    if(strVal.match(/out-dated/i) !== null) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  onSubmitStateThousandData(stateList) {\r\n    //console.log('---------Inside onSubmitStatethousandData');\r\n    //console.log(this.mapOfStateDtandCnfCases);\r\n    for (let state of stateList) {\r\n      const tempVal = this.mapOfStateShorts[state];\r\n      let lstStateNewCses = [];\r\n     // console.log('For the state:',tempVal);\r\n      if(tempVal !== undefined) {\r\n        lstStateNewCses = this.mapOfStateDtandCnfCases[tempVal][`nw_cases`];\r\n      }\r\n      let lengthData = lstStateNewCses.length;\r\n      let lastData = lstStateNewCses[lengthData-1];\r\n      if(lastData <= 1000) {\r\n         this.ltThousandCases[state] = lastData;\r\n      } \r\n    }\r\n    let sortedListltThouCses = this.sortObjectByKeys(this.ltThousandCases);\r\n    this.strStatenum = '';\r\n    for(let key of Object.keys(sortedListltThouCses)) {\r\n     // console.log(key,':',sortedListltThouCses[key]);\r\n      let tempStr = key + \":\"+ sortedListltThouCses[key];\r\n      this.strStatenum = this.strStatenum + tempStr + \",\" + \"  \";\r\n    }\r\n  }\r\n\r\n  sortObjectByKeys(o) {\r\n    return Object.keys(o).sort().reduce((r, k) => (r[k] = o[k], r), {});\r\n  }\r\n\r\n  toggleGraphState(): void {\r\n    this.isUserClickedStateGraph = false;\r\n  }\r\n\r\n/*  refreshState(stateName): void {\r\n    this.isSDataClicked = true;\r\n    this.stateDatalst = this.dictOfStateData[stateName];   \r\n    this.refreshDists();\r\n  } */\r\n\r\n  ngOnInit(): void {\r\n\r\n    /*this.httpClient.get(\"assets/data.json\").subscribe(data =>{\r\n      console.log(data);\r\n      let dataJson = data;\r\n      console.log(dataJson);\r\n    })*/\r\n\r\n    this.ds.getIndiaData().subscribe(response => {\r\n      this.completeCVDData = response;\r\n     // console.log('COmplete initial indian state data');\r\n     // console.log(this.completeCVDData);\r\n\r\n      for (const i of  Object.keys(this.completeCVDData)) {\r\n        // console.log('For the key :', i);\r\n        // console.log(this.completeCVDData[i]);\r\n        if ( i === 'statewise') {\r\n           for ( const data of this.completeCVDData[i] ) {\r\n              if(data[`state`] !== 'Total') {\r\n                this.stateList.push(data[`state`]);\r\n              }\r\n              this.dictOfStateData[data[`state`]] = [];\r\n              this.dictOfStateData[data[`state`]].push(data[`active`]);\r\n              this.dictOfStateData[data[`state`]].push(data[`confirmed`]);\r\n              this.dictOfStateData[data[`state`]].push(data[`deaths`]);\r\n              this.dictOfStateData[data[`state`]].push(data[`recovered`]);\r\n           }\r\n\r\n        }\r\n        if (i === 'cases_time_series') {\r\n          for (const val of this.completeCVDData[i]) {\r\n            // console.log('Val:');\r\n           // console.log(val[`dailyconfirmed`]);\r\n           // console.log(val[`dateymd`]);\r\n            if (val[`dailyconfirmed`] !== undefined) {\r\n              this.newCases.push(val[`dailyconfirmed`]);\r\n              this.dates.push(val[`dateymd`]);\r\n            }\r\n            else {\r\n              this.newCases.push(0);\r\n              this.dates.push(val[`dateymd`]);\r\n            }\r\n          }\r\n\r\n          this.onlyIndiaNwCases = this.newCases;\r\n          this.onlyIndDates = this.dates;\r\n          this.onlyIndiaRecovered = this.completeCVDData[i][this.completeCVDData[i].length - 1][`dailyrecovered`];\r\n          if(Number(this.onlyIndiaRecovered) === 0) {\r\n            this.onlyIndiaRecovered = '';\r\n          }\r\n        }\r\n      }\r\n      // this.lineChartData[0].data = this.newCases.slice((this.newCases.length - this.numTotalcases), this.newCases.length);\r\n      // this.lineChartData[0].label = 'CVD Anal data for country: ' + 'India';\r\n\r\n      // this.lineChartLabels = this.dates.slice((this.dates.length - this.numTotalcases), this.dates.length);\r\n      this.categoryOfGraph = 'nc';\r\n      this.refreshData();\r\n    });\r\n\r\n    // -- Getting world data for demonstrating world data and multiple chaining or error handling.\r\n\r\n    this.ds.getWorldData().pipe(\r\n      catchError(err => {\r\n         //console.log('Throwing error', err);\r\n         return throwError(err);\r\n      }),\r\n      catchError(err => {\r\n        //console.log('Throwing error again:', err);\r\n        return throwError(err);\r\n      })\r\n\r\n    ).subscribe(result => {\r\n        // console.log(result);\r\n        this.completeWrldCVDdata = JSON.parse(result);\r\n       // console.log(this.completeWrldCVDdata);\r\n        for (const keys of Object.keys(this.completeWrldCVDdata)) {\r\n          this.cntryList.push(this.completeWrldCVDdata[keys][`location`]);\r\n          //console.log(this.completeWrldCVDdata[keys][`location`]);\r\n\r\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]] =  {};\r\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`nw_cases`] = [];\r\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`dt`] = [];\r\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`new_vccn`] = [];          \r\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`total_vccn`] = [];\r\n          for (const vals of this.completeWrldCVDdata[keys][`data`]) {\r\n            //console.log(vals);\r\n            //console.log('type of val is : ',typeof(vals));\r\n            this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`nw_cases`].push(vals[`new_cases`]);\r\n            this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`dt`].push(vals[`date`]);\r\n            //console.log('new vaccinations : ',vals[`new_vaccinations`]);\r\n            if(vals[`new_vaccinations`]) {\r\n              this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`new_vccn`].push(vals[`new_vaccinations`]);\r\n              this.lastdateNewVccnUpdated = vals[`date`];\r\n            }\r\n            if(vals[`total_vaccinations`]) {\r\n              this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`total_vccn`].push(vals[`total_vaccinations`]);\r\n            }\r\n          }\r\n        }\r\n\r\n       // console.log('Dict manually created :',this.dictOfWorldCntryDates);\r\n    }, err => {\r\n       console.log('World Data Erorr: ', err);\r\n    }, () => {\r\n      console.log('HTTPS request completed');\r\n    });\r\n\r\n    // --------- Other urls for demonstrating the promise and async and await.\r\n\r\n    //const promised = this.httpClient.get(this.apiURL).toPromise();\r\n   // console.log(promised);\r\n    //promised.then( (data) => {\r\n      // console.log('Promise resolved with: ', data);\r\n    //}).catch((err) => {\r\n    //  console.log('Error: ', err);\r\n    //});\r\n\r\n\r\n    // ---- Nodejs world data ----\r\n\r\n    /*this.ds.getNodejsWrldData().subscribe( (response) => {\r\n       console.log('Nodejs World data : ');\r\n       console.log(response);\r\n    });*/\r\n\r\n    // --- Indian statewise data -----\r\n\r\n    this.ds.getIndianStateData().pipe(\r\n      catchError(err => {\r\n        // console.log('Throwing error', err);\r\n         return throwError(err);\r\n      }),\r\n      catchError(err => {\r\n       // console.log('Throwing error again:', err);\r\n        return throwError(err);\r\n      })\r\n    ).subscribe((result) => {\r\n       this.mapOfStateLatestUpdateDate = {};\r\n       this.completeIndianStateData = JSON.parse(result);\r\n       //console.log('Complete state data:');\r\n       //console.log(this.completeIndianStateData);\r\n       for (const stateData of Object.keys(this.completeIndianStateData)) {\r\n          this.mapOfStateDtandCnfCases[stateData] = {};\r\n          this.mapOfStateDtandCnfCases[stateData][`dt`] = [];\r\n          this.mapOfStateDtandCnfCases[stateData][`nw_cases`] = [];\r\n          this.mapOfStateDtandCnfCases[stateData][`nw_rcvs`] = [];\r\n          this.mapOfStateDtandCnfCases[stateData][`nw_vcnated`] = [];\r\n          this.mapOfStateDtandCnfCases[stateData][`total_vcnated`] = [];\r\n          for (const datesob of Object.keys(this.completeIndianStateData[stateData][`dates`])) {\r\n              this.mapOfStateDtandCnfCases[stateData][`dt`].push(datesob);\r\n              for (const objdelta of Object.keys(this.completeIndianStateData[stateData][`dates`][datesob])) {\r\n                   if ( objdelta === 'delta') {\r\n                      this.mapOfStateDtandCnfCases[stateData][`nw_cases`]\r\n                          .push(this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`confirmed`]);\r\n                      this.mapOfStateDtandCnfCases[stateData][`nw_rcvs`]\r\n                          .push(this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`recovered`]);\r\n                      this.mapOfStateDtandCnfCases[stateData][`nw_vcnated`]\r\n                          .push(this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`vaccinated`]);\r\n\r\n                      if (this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`confirmed`] && \r\n                      this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`confirmed`] !== undefined &&\r\n                      this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`confirmed`] !== '') {\r\n                        this.mapOfStateLatestUpdateDate[stateData] = datesob;                        \r\n                      }                    \r\n                   }\r\n                   else if (objdelta === 'total') {\r\n                    this.mapOfStateDtandCnfCases[stateData][`total_vcnated`]\r\n                    .push(this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`vaccinated`]);\r\n\r\n                     if (this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`vaccinated`] && \r\n                      this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`vaccinated`] !== undefined &&\r\n                      this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`vaccinated`] !== '') {\r\n                        this.latestStateDtTotalVccn = datesob;\r\n                     }                    \r\n                   }\r\n                   // console.log('Date total state vccn', this.latestStateDtTotalVccn)\r\n              }\r\n          }\r\n       }\r\n       let tmpLst = [\"Maharashtra\", \"Kerala\", \"Karnataka\", \"Andhra Pradesh\", \"Tamil Nadu\", \"Delhi\", \"Uttar Pradesh\", \"West Bengal\", \"Odisha\", \"Rajasthan\", \"Chhattisgarh\", \"Telangana\", \"Haryana\", \"Gujarat\", \"Bihar\", \"Madhya Pradesh\", \"Assam\", \"Punjab\", \"Jammu and Kashmir\", \"Jharkhand\", \"Uttarakhand\", \"Himachal Pradesh\", \"Goa\", \"Puducherry\", \"Tripura\", \"Manipur\", \"Chandigarh\", \"Arunachal Pradesh\", \"Meghalaya\", \"Nagaland\", \"Ladakh\", \"Sikkim\", \"Andaman and Nicobar Islands\", \"Mizoram\", \"Dadra and Nagar Haveli and Daman and Diu\", \"Lakshadweep\"]\r\n       this.onSubmitStateThousandData(tmpLst);\r\n       // console.log('Map of state and data :');\r\n       // console.log(this.mapOfStateDtandCnfCases);\r\n    }, err => {\r\n     //  console.log('Indian state Data Erorr: ', err);\r\n    }, () => {\r\n      // console.log('HTTP request completed: for Indian state');\r\n    });\r\n    \r\n    this.ds.getIndianDistrictData().subscribe(response => {\r\n      this.districtWiseCvdDataInd = JSON.parse(response);\r\n     // console.log('dist data');\r\n     // console.log(this.districtWiseCvdDataInd);\r\n    });\r\n\r\n    this.ds.getIndianDistrictTimeSeriesData().subscribe(res => {\r\n      this.jsonTimeSeriesDstdata = JSON.parse(res);      \r\n     // console.log('Dst time sries');\r\n     // console.log(this.jsonTimeSeriesDstdata);\r\n      let dateArray = [];\r\n      this.someLastDateArray = [];\r\n      for (let keys of Object.keys(this.jsonTimeSeriesDstdata) ) {\r\n         dateArray.push(keys);\r\n      }\r\n\r\n      for (let i = dateArray.length-1 ; i > dateArray.length - 7 ; i--) {\r\n         this.someLastDateArray.push(dateArray[i]);\r\n      }\r\n      this.indCurrConf = this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][`TT`][`delta`][`confirmed`];               \r\n      this.indCurrRec = this.jsonTimeSeriesDstdata[this.someLastDateArray[0]][`TT`][`delta`][`recovered`];\r\n    });\r\n\r\n\r\n    Papa.parse('http://api.covid19india.org/csv/latest/vaccine_doses_statewise.csv',{\r\n      download:true,\r\n      complete: (res, file) => {\r\n        // console.log('Vaccine data');\r\n        // console.log(res);\r\n        this.vaccineDataLst = res;\r\n        for(let objdata of Object.keys(this.vaccineDataLst)) {\r\n          if(objdata === 'data') {\r\n            for(let states of this.vaccineDataLst[objdata]) {\r\n              if(states[0] === 'State') {\r\n                this.vaccineStateMap[states[0]] = states[states.length-1];\r\n              }\r\n              else {\r\n                this.vaccineStateMap[states[0]] = Number(states[states.length-1]);\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        this.lstmostVaccineStates = this.getMostOfSomeAttributeData(this.vaccineStateMap, 6);\r\n        // console.log(this.lstmostVaccineStates);\r\n        \r\n        // console.log('Vaccine map :')\r\n        // console.log(this.vaccineStateMap);\r\n        // console.log(this.vaccineStateMap[`Total`]);\r\n      }\r\n    }); \r\n    \r\n   /* Papa.parse('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv',{\r\n      download:true,\r\n      complete: (res, file) => {\r\n       console.log('Recovery data', );\r\n       //console.log(res);\r\n      }\r\n    }); */\r\n\r\n    let objSetOfCntrsData = {};\r\n    this.ds.getCurrentWorldDataByCountry().subscribe(result => {          \r\n      objSetOfCntrsData = result;      \r\n      // console.log(objSetOfCntrsData);\r\n      for(let key of Object.keys(objSetOfCntrsData)) {\r\n        if(key === 'data') {\r\n          // console.log('Type of consolidated data:',typeof(objSetOfCntrsData[key]));\r\n          // console.log( objSetOfCntrsData[`data`] );\r\n          for (let lstData of  objSetOfCntrsData[`data`]) {\r\n            if(lstData[`location`] === 'US') {\r\n              this.mapOfCntryConsolidatedCases['United States'] = {};                  \r\n              this.mapOfCntryConsolidatedCases['United States'][`confirmed`] = lstData[`confirmed`];\r\n              this.mapOfCntryConsolidatedCases['United States'][`deaths`] = lstData[`deaths`];\r\n              this.mapOfCntryConsolidatedCases['United States'][`recovered`] = lstData[`recovered`];\r\n              this.mapOfCntryConsolidatedCases['United States'][`active`] = lstData[`active`];\r\n            }\r\n            else {\r\n              this.mapOfCntryConsolidatedCases[lstData[`location`]] = {};\r\n              this.mapOfCntryConsolidatedCases[lstData[`location`]][`confirmed`] = lstData[`confirmed`];\r\n              this.mapOfCntryConsolidatedCases[lstData[`location`]][`deaths`] = lstData[`deaths`];\r\n              this.mapOfCntryConsolidatedCases[lstData[`location`]][`recovered`] = lstData[`recovered`];\r\n              this.mapOfCntryConsolidatedCases[lstData[`location`]][`active`] = lstData[`active`];\r\n            }                                \r\n          }\r\n        }\r\n        else if(key === 'dt') {\r\n           this.dateOFCntryConsolidatedCases = objSetOfCntrsData[key];\r\n        }\r\n        else if(key === 'ts') {\r\n          // console.log('Original ts', objSetOfCntrsData[key]);\r\n          let d = new Date(objSetOfCntrsData[key] * 1000)\r\n          this.tmpStampOfLatestUpdate = \"Date: \"+d.toUTCString();\r\n                }\r\n      }\r\n      // console.log('COnslodated logs:')\r\n      // console.log(this.mapOfCntryConsolidatedCases);\r\n    });\r\n   \r\n  }\r\n\r\n  getNumberWithCommas(x:string) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n     this.completeWrldCVDdata.unsubscribe();\r\n     this.completeIndianStateData.unsubscribe();\r\n     this.districtWiseCvdDataInd.unsubscribe();\r\n     delete this.dstNameNoteMap\r\n     delete this.mapOfStateDtandCnfCases;\r\n     delete this.mapOfStateImages;\r\n     delete this.mapOfStateShorts;\r\n     delete this.vaccineStateMap;\r\n  }\r\n\r\n}\r\n","<h2>\r\n  <p align=\"center\" style=\"color:blue\"> COVID-19 ANALYSIS !!</p>\r\n</h2>\r\n<hr>\r\n<div id=\"accordion\" class=\"multi-collapse\" >\r\n  <div class=\"card\">\r\n    <div class=\"card-header\" id=\"headingOne\">\r\n      <h5 class=\"mb-0\">\r\n        <button (click)=\"getMarqueeToggleOthers()\" class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          World data >\r\n        </button>\r\n      </h5>\r\n    </div>\r\n    <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-auto\">\r\n            <label for=\"mnWord\" style=\"color: brown; font-weight: bold;\">Visualize world info: </label> &nbsp;\r\n            <label *ngIf=\" this.completeWrldCVDdata === undefined\" disabled>\r\n              <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Loading...\r\n            </label>\r\n            <!--<span *ngIf=\" this.completeWrldCVDdata === undefined\"> Loading data .... </span>-->\r\n            <br>\r\n            <input list=\"mnWord\" name=\"mnWord\" onfocus=\"this.value=''\" [(ngModel)]=\"selectedWS\" #cnName [disabled]=\"this.completeWrldCVDdata === undefined \"\r\n            (change)=\"onSubmitWorldData(selectedWS)\" placeholder=\"e.g India\">\r\n            <datalist id=\"mnWord\" >\r\n                <option *ngFor=\"let cntry of cntryList\" [value]=\"cntry\">{{cntry}} </option>\r\n            </datalist>                        \r\n            <ul *ngIf=\"selectedWS !== ''\">\r\n              <hr>\r\n              <li><p>Total vaccinations : <span class=\"badge badge-success blinking\" > {{ this.totalVccnLatest  | number: '2.'}} </span></p> </li>                       \r\n              <li *ngIf=\"recoveryRateWrld > 40\"><p>Percent recoveries : <span class=\"badge badge-success blinking\" > {{ this.recoveryRateWrld }} % </span> </p> </li>\r\n            </ul>\r\n            <!--<select class=\"selectpicker\" data-style=\"btn-success\" [(ngModel)]=\"selectedWS\" #cnName [disabled]=\"this.completeWrldCVDdata === undefined \"\r\n              (change)=\"onSubmitWorldData(selectedWS)\">\r\n              <option value=\"\">Choose your country</option>\r\n              <option *ngFor=\"let cntry of cntryList\" [ngValue]=\"cntry\">{{cntry}}\r\n              </option>\r\n            </select>-->            \r\n           <!-- <button (click)=\"onSubmitWorldGrData(selectedWS)\" class=\"btn btn-primary\">New Cases Growth Rate</button> -->\r\n          </div>\r\n          <div class=\"col-md-auto\" [hidden]=\"this.selectedWS !== 'India' && this.selectedWS !== ''\">\r\n              <div class=\"alert alert-success\">\r\n                <h3> Today's progressing numbers: India </h3>\r\n                <label>New cases:</label> &nbsp;\r\n                <label class=\"blinkingInfoNote\"> + {{this.indCurrConf | number: '2.'}}</label>.\r\n                <label *ngIf=\" this.jsonTimeSeriesDstdata === undefined\" disabled>\r\n                  <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  Loading...\r\n                </label>\r\n                <br>\r\n                <label>Recoveries:</label> &nbsp;\r\n                <label class=\"blinkingInfoNote\"> + {{this.indCurrRec | number: '2.'}}</label>.              \r\n                <label *ngIf=\" this.jsonTimeSeriesDstdata === undefined\" disabled>\r\n                  <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  Loading...\r\n                </label>\r\n              </div>            \r\n          </div>\r\n          <div class=\"col-md-auto\">\r\n            <div class=\"card border-success mb-3\" style=\"width: 18rem;\" *ngIf=\"selectedWS !== ''\">\r\n              <div class=\"card-header\">\r\n                Latest info as on date {{ this.newCasesWrdDate }}\r\n              </div>\r\n              <ul class=\"list-group list-group-flush\">\r\n                <li class=\"list-group-item\">New cases: <span class=\"badge badge-danger blinking\" > {{ this.newCasesReportedWrld |  number: '2.' }} </span> <br>\r\n                  <span *ngIf=\"this.newCasesReportedWrld === 0 || this.newCasesReportedWrld === ''\" class=\"blinking\"> *Awaiting update on new cases.</span>\r\n                </li>\r\n                <li class=\"list-group-item\" *ngIf=\"selectedWS === 'India'\">New recoveries:<span class=\"badge badge-success blinking\" > {{ this.onlyIndiaRecovered |  number: '2.' }} </span> <br>\r\n                  <span *ngIf=\"this.onlyIndiaRecovered === ''\" class=\"blinking\"> *Awaiting update on new cases.</span>\r\n                </li>\r\n                <li class=\"list-group-item\">New vaccinations :<span class=\"badge badge-success blinking\" > {{ this.newVaccnLatest | number: '2.'}} </span> <br>                  \r\n                 <span>{{ this.msgVaccnnew }}</span> \r\n                </li>                \r\n              </ul>\r\n            </div>            \r\n          </div>\r\n          <div class=\"col-md-auto\">\r\n            <div class=\"card border-success mb-3\" style=\"width: 18rem;\" *ngIf=\"selectedWS !== ''\">\r\n              <div class=\"card-header\">\r\n                Consolidated data : {{ selectedWS }} Updated on {{ this.tmpStampOfLatestUpdate }}\r\n              </div>\r\n              <ul class=\"list-group list-group-flush\">\r\n                <li class=\"list-group-item\">Total Confirmed cases : <span class=\"badge badge-danger blinking\" > {{ this.dataWrldCnf | number: '2.' }} </span></li>\r\n                <li class=\"list-group-item\">Total Recoveries : <span class=\"badge badge-success blinking\" > {{ this.dataWrldRecvrd | number: '2.' }} </span></li>\r\n                <li class=\"list-group-item\">Total Active cases : <span class=\"badge badge-info blinking\" > {{ this.dataWrldActive | number: '2.' }} </span></li>                                \r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>        \r\n        <div class=\"row\">                 \r\n          <div class=\"col\">               \r\n            <br>\r\n              <label for=\"quantity\" style=\"color: brown; font-weight: bold;\">Choose range of days (between 10 and 310):</label>\r\n              <br>\r\n              <input type=\"range\" id=\"qantity\" name=\"quantity\" value=\"10\" min=\"10\" max=\"310\" oninput=\"this.nextElementSibling.value = this.value\" #quantity> :\r\n              <output style=\"color: crimson; font-weight: bold;\">10</output>\r\n              &nbsp; &nbsp;      \r\n              <button (click)=\"onSubmit(quantity.value)\" class=\"btn btn-primary\">Enter</button>                \r\n              <canvas baseChart  style=\"position: relative; height:10vh; width:80vw\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\"\r\n                    [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" [plugins]=\"lineChartPlugins\">\r\n              </canvas>                          \r\n        </div>        \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\" id=\"headingTwo\">\r\n      <h5 class=\"mb-0\">\r\n        <button id=\"stateAcc\" (click)=\"getMarqueeToggle()\" class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n          Indian-State specific data >\r\n        </button>\r\n      </h5>\r\n    </div>\r\n    <div *ngIf=\"this.marqueeToggle\">\r\n    <p align=\"center\" style=\"font-weight: bold; color: brown;\">Data of Indian states reporting less than thousand or equivalent new cases in last 24 - 48 hrs.</p>\r\n    <marquee direction=\"left\" style=\"font-family: Rajdhani, sans-serif; color: #3a3dda\" bgcolor=\"#FCF7F1\" scrolldelay=\"100\" behavior=\"loop\">{{strStatenum}}</marquee>\r\n    </div>\r\n    <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\r\n      <div class=\"card-body\">        \r\n        <div class=\"row\">\r\n        <div class=\"col\">\r\n        <label for=\"mnState\" style=\"color: brown; font-weight: bold;\">Choose Indian state:</label>\r\n        &nbsp;\r\n        <label *ngIf=\"this.completeCVDData === undefined\" disabled>\r\n          <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n          Loading...\r\n        </label>\r\n        <!--<span *ngIf=\" this.completeCVDData === undefined\"> Loading data .... </span>-->\r\n        <input list=\"mnState\" name=\"mnState\" onfocus=\"this.value=''\" [(ngModel)]=\"selectIS\" #cnName [disabled]=\"this.completeCVDData === undefined\"\r\n        (change)=\"onSubmitStateData(selectIS)\" placeholder=\"e.g. Maharashtra\">\r\n        <datalist id=\"mnState\" >\r\n            <option *ngFor=\"let state of stateList\" [ngValue]=\"state\">{{state}} </option>\r\n        </datalist> &nbsp; <label *ngIf=\"this.pctRecState > 0\">Percent recoveries : {{ this.pctRecState }} </label>\r\n        <!--<select class=\"selectpicker\" data-style=\"btn-success\" [(ngModel)]=\"selectIS\" #cnName [disabled]=\"this.completeCVDData === undefined\"\r\n          (change)=\"onSubmitStateData(selectIS)\">\r\n          <option value=\"\">Choose your state</option>\r\n          <option *ngFor=\"let state of stateList\" [ngValue]=\"state\">{{state}}\r\n          </option>\r\n        </select>-->\r\n        <!--<table style=\"padding-left: 20px;\" class=\"table\">\r\n            <tr *ngFor=\"let data of stateDatalst; let i = index\">\r\n              <li><label\r\n                  [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\r\n                  {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li>\r\n            </tr>\r\n          </table> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-top: auto;\" *ngIf=\"isSDataClicked && this.selectIS !== '' \">\r\n          <!--<div class=\"column\" style=\"background-color: whitesmoke;\">\r\n            <img src='{{ mapOfStateImages.India }}' width=\"70\" height=\"150\" (mouseover)=\"this.style.cursor='hand'\"\r\n              (click)=\"onSubmitStateData(selectIS)\" />\r\n          </div>-->\r\n          <div class=\"col\">\r\n            <img src='{{ mapOfStateImages[selectIS] }}' class=\"rounded-circle\" width=\"50\" height=\"50\" alt=\"State map\"\r\n            (click)=\"onSubmitStateData(selectIS)\" data-toggle=\"tooltip\" title=\"Click me to refresh the time-series graph if you have modified the range of days.\" />\r\n            &nbsp; <label style=\"font-weight: bold;\"> {{ selectIS }} </label>  \r\n            <div class=\"alert alert-danger\" *ngIf=\" selectIS !== 'Total' \">\r\n              <label style=\"font-weight: bold;\">Reporting dated: {{ this.latestSTateDtNewCases }}</label>\r\n              <p *ngIf=\"this.latestNwStateCase !== ''\" class=\"blinkingInfo\">{{this.latestNwStateCase | number: '2.'}} new cases.</p>\r\n              <p *ngIf=\"this.latestRcvdStateCase !== ''\" class=\"blinkingInfo\">{{ this.latestRcvdStateCase | number: '2.' }} recoveries.</p>\r\n              <p *ngIf=\"this.latestStateDatanewVaccn !== ''\" class=\"blinkingInfo\">{{ this.latestStateDatanewVaccn | number: '2.' }} newly vaccinated. </p>\r\n            </div>\r\n            <div class=\"alert alert-success\">\r\n              <label>Total vaccinations till date {{ this.latestStateDtTotalVccn}}: <br></label><label class=\"blinkingInfoNote\">{{this.lastetStateTotalVccn | number: '2.'}}</label>.              \r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <label style=\"font-weight: bold;\"> {{ selectIS }} <br>Consolidated data</label> &nbsp;    \r\n            <!--<li *ngFor=\"let data of stateDatalst; let i = index\">\r\n              <label\r\n                [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\r\n                {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li> -->\r\n            <ul class=\"list-group\" >\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let data of stateDatalst; let i = index\">\r\n                <label [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\r\n                {{ this.lstOfLabels[i] }} : </label> &nbsp; &nbsp;\r\n                <span class=\"badge badge-primary badge-pill\">{{ data | number: '2.' }}</span>\r\n              </li>\r\n            </ul>\r\n      \r\n          </div>\r\n          <div class=\"col\" *ngIf=\"this.selectIS !== 'Total'\">\r\n            <label style=\"font-weight: bold;\">Top 5 districts <br> with most active cases</label>\r\n              <!--<div *ngFor=\"let item of this.lstMostActiveofObj\">            \r\n                  <li *ngFor=\"let dt of item | keyvalue\">\r\n                    <label>{{ dt.key }}: &nbsp; &nbsp; </label>\r\n                     <span class=\"badge badge-primary badge-danger blinking\"> {{ dt.value }} </span>\r\n                  </li>\r\n              </div>-->\r\n      \r\n             <ul class=\"list-group\" *ngFor=\"let item of this.lstMostActiveofObj\">          \r\n                <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let dt of item | keyvalue\">\r\n                  <label>{{ dt.key }}: &nbsp; &nbsp; </label>\r\n                  <span class=\"badge badge-primary badge-danger blinking\"> {{ dt.value  | number: '2.' }} </span>\r\n                </li>          \r\n              </ul>\r\n          </div>\r\n          <div class=\"col\" *ngIf=\"this.selectIS !== 'Total'\">\r\n            <label style=\"font-weight: bold;\">Top 5 districts <br> with most recoveries [In %]</label>\r\n              <!--<div *ngFor=\"let item of this.lstMostActiveofObj\">            \r\n                  <li *ngFor=\"let dt of item | keyvalue\">\r\n                    <label>{{ dt.key }}: &nbsp; &nbsp; </label>\r\n                     <span class=\"badge badge-primary badge-danger blinking\"> {{ dt.value }} </span>\r\n                  </li>\r\n              </div>-->\r\n      \r\n              <ul class=\"list-group\" *ngFor=\"let itemr of this.lstMostRecoveredObj\">          \r\n                <li class=\"list-group-item list-group-item-success\" *ngFor=\"let dtr of itemr | keyvalue\">\r\n                  <label>{{ dtr.key }}: &nbsp; &nbsp; </label>\r\n                  <span class=\"badge badge-primary badge-info blinking\"> {{ dtr.value }} </span>\r\n                </li>          \r\n              </ul>\r\n          </div> \r\n          <!--<div class=\"column\" style=\"background-color: whitesmoke;\">\r\n            <img width=\"20\" height=\"20\"\r\n              src=\"https://www.pngitem.com/pimgs/m/514-5145836_transparent-blinking-clipart-animated-arrow-png-gif-png.png\" />\r\n          </div> -->                      \r\n        </div>\r\n        <!--<button *ngIf=\"this.isDaysModified\" (click)=\"onSubmitStateData(selectIS)\" class=\"btn btn-primary\">Refresh Graph</button>-->\r\n        <div class=\"row\" *ngIf=\"selectIS !== '' && isUserClickedStateGraph\">\r\n          <div class=\"col\">          \r\n          <canvas baseChart style=\"position: relative; height:10vh; width:80vw\" [datasets]=\"lineChartDataStates\" [labels]=\"lineChartLabelsStates\"\r\n            [options]=\"lineChartOptionsStates\" [colors]=\"lineChartColorsStates\" [legend]=\"lineChartLegendStates\"\r\n            [chartType]=\"lineChartTypeStates\" [plugins]=\"lineChartPluginsStates\">\r\n          </canvas>\r\n          <button *ngIf=\"isUserClickedStateGraph\" (click)=\"toggleGraphState()\" class=\"btn btn-primary\">Hide Graph</button>\r\n          </div>\r\n        </div>        \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\" id=\"headingThree\">\r\n      <h5 class=\"mb-0\">\r\n        <button  (click)= \"getMarqueeToggleOthers()\" class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n          District specific data >\r\n        </button>\r\n      </h5>\r\n    </div>\r\n    <div id=\"collapseThree\" class=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n      <div class=\"card-body\">\r\n        <div *ngIf=\"selectIS === '' || selectIS === 'Total';else other_content\">\r\n           Select a valid state first to visualize district specific data.\r\n        </div>\r\n        <ng-template #other_content>\r\n        <div class='row'>\r\n          <div class=\"col\">\r\n          <label for=\"mndist\" style=\"color: brown; font-weight: bold;\">Choose districts from the state: {{ selectIS }} for more details:  &nbsp;</label>\r\n          <input list=\"mndist\" name=\"mndist\" onfocus=\"this.value=''\" [(ngModel)]=\"selectDist\" #stname (change) = \"onSubmitDistData(selectDist)\" [disabled]=\" this.dstSpecificNote !== '' &&  isDataOuDated(this.dstSpecificNote)\" placeholder=\"Enter district\">\r\n            <datalist id=\"mndist\" >\r\n              <option value=\"\">Choose district for district specific data</option>\r\n              <option *ngFor=\"let item of onlyDstData | keyvalue\" [ngValue]=\"item.key\">{{item.key}}\r\n            </datalist>          \r\n            <span style=\"color:green\" *ngIf=\" this.dstSpecificNote !== '' && isDataOuDated(this.dstSpecificNote) \"> *Click on state map to enable district selection. </span>\r\n          <!--<select class=\"selectpicker\" data-style=\"btn-success\" [(ngModel)]=\"selectDist\" #stname (change) = \"onSubmitDistData(selectDist)\" [disabled]=\" this.dstSpecificNote !== '' &&  isDataOuDated(this.dstSpecificNote) \" >\r\n             <option value=\"\">Choose district for district specific data</option>\r\n             <option *ngFor=\"let item of onlyDstData | keyvalue\" [ngValue]=\"item.key\">{{item.key}}\r\n             </option>\r\n           </select>-->\r\n          </div>            \r\n        </div>\r\n        <marquee *ngIf=\" this.dstSpecificNote !== '' \" direction=\"left\" style=\"font-family: Rajdhani, sans-serif; color:red\" bgcolor=\"#FCF7F1\" scrolldelay=\"100\" behavior=\"loop\">{{ this.dstSpecificNote  }}</marquee>\r\n        <div class=\"row\" id=\"srvDistSection\" *ngIf=\"this.selectDist !== ''\">\r\n         <div class=\"col\">\r\n            <label style=\"font-weight: bold;\">Consolidated Data : {{ selectDist }} district</label> &nbsp;\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let data of lstofDistData; let i = index\">\r\n                <label [ngStyle]=\"{'color': (i === 0) ? 'red' : (i === 1) ? 'orange' : (i === 2) ? 'red' : (i === 3) ? 'green': '' }\">\r\n                {{ this.lstOfLabels[i] }} : </label>\r\n                <span class=\"badge badge-primary badge-pill\">{{ data | number: '2.' }}</span>\r\n              </li>\r\n            </ul>      \r\n          </div>\r\n          <div class=\"col\">\r\n            <label style=\"font-weight: bold;\">Today's Data : {{ selectDist }} district</label> &nbsp;\r\n            <div *ngIf=\"this.isEveryItemzeroTodaylstdata\" class=\"alert alert-primary blinkingInfoNote\">\r\n                <strong>Note:</strong> Today's district data may take some time to update.<br>Please visit this section later in the day.\r\n                 <br>\r\n                <button *ngIf=\"this.yestConf !== '' && this.yestDeaths !== '' && this.yestRec !== ''\" type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"toggleVisualYest()\">Visualize / Hide yesterday's data.</button>\r\n            </div>\r\n            <ul class=\"list-group\" >\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let data1 of lstofTodayDistData; let j = index\">\r\n                <label [ngStyle]=\"{'color': (j === 0) ? 'red' : (j === 1) ? 'red' : (j === 2) ? 'green' :  '' }\"[ngStyle]=\"{'color': (j === 0) ? 'red' : (j === 1) ? 'red' : (j === 2) ? 'green' :  '' }\">\r\n                {{ this.lstOfTodayLabels[j] }} : </label>\r\n                <span class=\"badge badge-primary badge-pill blinking\">{{ data1  | number: '2.' }}</span>\r\n              </li>         \r\n            </ul>\r\n          </div>    \r\n          <div class=\"col\" *ngIf=\"this.isDisplayYestClicked\">\r\n            <label style=\"font-weight: bold;\">Yesterday's Data : {{ selectDist }} district</label> &nbsp;\r\n            <ul class=\"list-group\" >\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <label [ngStyle]=\"{'color':'red' }\">\r\n                {{ this.lstOfTodayLabels[0] }} : </label>\r\n                <span class=\"badge badge-primary badge-pill blinking\">{{ this.yestConf  | number: '2.' }}</span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <label [ngStyle]=\"{'color':'red' }\">\r\n                {{ this.lstOfTodayLabels[1] }} : </label>\r\n                <span class=\"badge badge-primary badge-pill blinking\">{{ this.yestDeaths  | number: '2.' }}</span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <label [ngStyle]=\"{'color':'green' }\">\r\n                {{ this.lstOfTodayLabels[2] }} : </label>\r\n                <span class=\"badge badge-primary badge-pill blinking\">{{ this.yestRec  | number: '2.' }}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        </ng-template>\r\n        <strong><hr class=\"new4\"></strong>              \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--- Below is commented for imple 1  -->\r\n\r\n<!-- <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"column\">\r\n      <label for=\"quantity\" style=\"color: brown; font-weight: bold;\">Choose range of days (between 10 and 310):</label>\r\n      <br>\r\n      <input type=\"range\" id=\"qantity\" name=\"quantity\" value=\"10\" min=\"10\" max=\"310\" oninput=\"this.nextElementSibling.value = this.value\" #quantity> :\r\n      <output style=\"color: crimson; font-weight: bold;\">10</output>\r\n      &nbsp; &nbsp;      \r\n      <button (click)=\"onSubmit(quantity.value)\" class=\"btn btn-primary\">Enter</button>\r\n    </div>\r\n    <div class=\"column\">\r\n      <label style=\"color: brown; font-weight: bold;\">Visualize world info: </label> &nbsp;\r\n      <label *ngIf=\" this.completeWrldCVDdata === undefined\" disabled>\r\n        <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        Loading...\r\n      </label>-->\r\n      <!--<span *ngIf=\" this.completeWrldCVDdata === undefined\"> Loading data .... </span>-->\r\n      <!--<br>\r\n      <select class=\"selectpicker\" data-style=\"btn-success\" [(ngModel)]=\"selectedWS\" #cnName [disabled]=\"this.completeWrldCVDdata === undefined \"\r\n        (change)=\"onSubmitWorldData(selectedWS)\">\r\n        <option value=\"\">Choose your country</option>\r\n        <option *ngFor=\"let cntry of cntryList\" [ngValue]=\"cntry\">{{cntry}}\r\n        </option>\r\n      </select>\r\n      &nbsp;\r\n      <button (click)=\"onSubmitWorldGrData(selectedWS)\" class=\"btn btn-primary\">New Cases Growth Rate</button>\r\n    </div>\r\n  </div>\r\n  <br> <br>\r\n  <canvas baseChart [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\"\r\n    [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" [plugins]=\"lineChartPlugins\">\r\n  </canvas>\r\n  <hr>\r\n  <label style=\"color: brown; font-weight: bold;\">Choose Indian state to visualize specific info: </label>\r\n  &nbsp;\r\n  <label *ngIf=\"this.completeCVDData === undefined\" disabled>\r\n    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n    Loading...\r\n  </label>-->\r\n  <!--<span *ngIf=\" this.completeCVDData === undefined\"> Loading data .... </span>-->\r\n  <!--<select class=\"selectpicker\" data-style=\"btn-success\" [(ngModel)]=\"selectIS\" #cnName [disabled]=\"this.completeCVDData === undefined\"\r\n    (change)=\"refreshState(selectIS)\">\r\n    <option value=\"\">Choose your state</option>\r\n    <option *ngFor=\"let state of stateList\" [ngValue]=\"state\">{{state}}\r\n    </option>\r\n  </select>-->\r\n  <!--<table style=\"padding-left: 20px;\" class=\"table\">\r\n      <tr *ngFor=\"let data of stateDatalst; let i = index\">\r\n        <li><label\r\n            [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\r\n            {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li>\r\n      </tr>\r\n    </table> -->\r\n<!--  <br>\r\n  <div class=\"row\" *ngIf=\"isSDataClicked\">-->\r\n    <!--<div class=\"column\" style=\"background-color: whitesmoke;\">\r\n      <img src='{{ mapOfStateImages.India }}' width=\"70\" height=\"150\" (mouseover)=\"this.style.cursor='hand'\"\r\n        (click)=\"onSubmitStateData(selectIS)\" />\r\n    </div>-->\r\n<!--    <div class=\"column\">\r\n      <p style=\"font-weight: bold;\"> {{ selectIS }}</p> &nbsp;     --> \r\n      <!--<li *ngFor=\"let data of stateDatalst; let i = index\">\r\n        <label\r\n          [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\r\n          {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li> -->\r\n<!--      <ul class=\"list-group\" >\r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let data of stateDatalst; let i = index\">\r\n          <label [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\r\n          {{ this.lstOfLabels[i] }} : </label> &nbsp; &nbsp;\r\n          <span class=\"badge badge-primary badge-pill\">{{ data }}</span>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n    <div class=\"column\">\r\n      <p style=\"font-weight: bold;\">Top 5 districts <br> with most active cases</p> &nbsp; -->\r\n        <!--<div *ngFor=\"let item of this.lstMostActiveofObj\">            \r\n            <li *ngFor=\"let dt of item | keyvalue\">\r\n              <label>{{ dt.key }}: &nbsp; &nbsp; </label>\r\n               <span class=\"badge badge-primary badge-danger blinking\"> {{ dt.value }} </span>\r\n            </li>\r\n        </div>-->\r\n\r\n      <!--  <ul class=\"list-group\" *ngFor=\"let item of this.lstMostActiveofObj\">          \r\n          <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let dt of item | keyvalue\">\r\n            <label>{{ dt.key }}: &nbsp; &nbsp; </label>\r\n            <span class=\"badge badge-primary badge-danger blinking\"> {{ dt.value }} </span>\r\n          </li>          \r\n        </ul>\r\n    </div>\r\n    <div class=\"column\">\r\n      <p style=\"font-weight: bold;\">Top 5 districts <br> with most recoveries</p> &nbsp;-->\r\n        <!--<div *ngFor=\"let item of this.lstMostActiveofObj\">            \r\n            <li *ngFor=\"let dt of item | keyvalue\">\r\n              <label>{{ dt.key }}: &nbsp; &nbsp; </label>\r\n               <span class=\"badge badge-primary badge-danger blinking\"> {{ dt.value }} </span>\r\n            </li>\r\n        </div>-->\r\n\r\n<!--        <ul class=\"list-group\" *ngFor=\"let itemr of this.lstMostRecoveredObj\">          \r\n          <li class=\"list-group-item list-group-item-success\" *ngFor=\"let dtr of itemr | keyvalue\">\r\n            <label>{{ dtr.key }}: &nbsp; &nbsp; </label>\r\n            <span class=\"badge badge-primary badge-info blinking\"> {{ dtr.value }} </span>\r\n          </li>          \r\n        </ul>\r\n    </div>-->\r\n    <!--<div class=\"column\" style=\"background-color: whitesmoke;\">\r\n      <img width=\"20\" height=\"20\"\r\n        src=\"https://www.pngitem.com/pimgs/m/514-5145836_transparent-blinking-clipart-animated-arrow-png-gif-png.png\" />\r\n    </div> -->\r\n <!--   <div class=\"column\">\r\n      <img src='{{ mapOfStateImages[selectIS] }}' width=\"150\" height=\"170\"\r\n        (click)=\"onSubmitStateData(selectIS)\" />\r\n      <br>\r\n      <br>\r\n      <div class=\"info\" *ngIf=\" selectIS !== 'Total' \">\r\n        <strong>*Note: </strong><p class=\"blinkingInfo\" style=\"font-weight: bold;\"> Click on map for the <br> updated time series data of state and <br> \r\n        more district specific details.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"column\" *ngIf=\"isUserClickedStateGraph && selectIS !== 'Total'\">\r\n      <button *ngIf=\"isUserClickedStateGraph\" (click)=\"toggleGraphState()\" class=\"btn btn-primary\">Hide</button>\r\n      <canvas baseChart [datasets]=\"lineChartDataStates\" [labels]=\"lineChartLabelsStates\"\r\n        [options]=\"lineChartOptionsStates\" [colors]=\"lineChartColorsStates\" [legend]=\"lineChartLegendStates\"\r\n        [chartType]=\"lineChartTypeStates\" [plugins]=\"lineChartPluginsStates\" width=\"400\" height=\"250\">\r\n      </canvas>\r\n    </div>  \r\n  </div>  \r\n  <hr>\r\n \r\n  <div *ngIf=\"isUserClickedStateGraph && selectIS !== 'Total'\">\r\n    <label style=\"color: brown; font-weight: bold;\">Choose districts from the state: {{ selectIS }} for more details:</label>\r\n    <select class=\"selectpicker\" data-style=\"btn-success\" [(ngModel)]=\"selectDist\" #cnName (change) = \"onSubmitDistData(selectDist)\" [disabled]=\" this.dstSpecificNote !== '' &&  isDataOuDated(this.dstSpecificNote) \" >\r\n       <option value=\"\">Choose district for district specific data</option>\r\n       <option *ngFor=\"let item of onlyDstData | keyvalue\" [ngValue]=\"item.key\">{{item.key}}\r\n       </option>\r\n     </select> <span style=\"color:green\" *ngIf=\" this.dstSpecificNote !== '' && isDataOuDated(this.dstSpecificNote) \"> *Click on state map to enable district selection. </span>\r\n  </div>\r\n  <marquee *ngIf=\" this.dstSpecificNote !== '' \" direction=\"left\" style=\"font-family: Rajdhani, sans-serif; color:red\" bgcolor=\"#FCF7F1\" scrolldelay=\"100\" behavior=\"loop\">{{ this.dstSpecificNote  }}</marquee>\r\n  <div class=\"row\" *ngIf=\"this.isUserClickedDistData\" id=\"services-section\">-->\r\n    <!-- District wise details -->    \r\n<!--    <div class=\"column\" >\r\n      <p style=\"font-weight: bold;\">Consolidated Data : {{ selectDist }} district</p> &nbsp;-->\r\n      <!--<li *ngFor=\"let data of lstofDistData; let i = index\">\r\n        <label\r\n          [ngStyle]=\"{'color': (i === 0) ? 'red' : (i === 1) ? 'orange' : (i === 2) ? 'red' : (i === 3) ? 'green': '' }\">\r\n          {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li>-->\r\n      <!-- with badges-->\r\n\r\n      <!--<ul class=\"list-group\" >\r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let data of lstofDistData; let i = index\">\r\n          <label [ngStyle]=\"{'color': (i === 0) ? 'red' : (i === 1) ? 'orange' : (i === 2) ? 'red' : (i === 3) ? 'green': '' }\">\r\n          {{ this.lstOfLabels[i] }} : </label>\r\n          <span class=\"badge badge-primary badge-pill\">{{ data }}</span>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n    <div class=\"column\">\r\n      <p style=\"font-weight: bold;\">Today's Data : {{ selectDist }} district</p> &nbsp;-->\r\n      <!--<li *ngFor=\"let data1 of lstofTodayDistData; let j = index\">\r\n        <label\r\n          [ngStyle]=\"{'color': (j === 0) ? 'red' : (j === 1) ? 'red' : (j === 2) ? 'green' :  '' }\">\r\n          {{ this.lstOfTodayLabels[j] }} : </label>> {{ data1 }} <span style=\"color: coral;\" *ngIf=\" data1 === 0 \">: Data is yet to be updated. </span></li>-->\r\n<!--      <ul class=\"list-group\" >\r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let data1 of lstofTodayDistData; let j = index\">\r\n          <label [ngStyle]=\"{'color': (j === 0) ? 'red' : (j === 1) ? 'red' : (j === 2) ? 'green' :  '' }\"[ngStyle]=\"{'color': (j === 0) ? 'red' : (j === 1) ? 'red' : (j === 2) ? 'green' :  '' }\">\r\n          {{ this.lstOfTodayLabels[j] }} : </label>\r\n          <span class=\"badge badge-primary badge-pill blinking\">{{ data1 }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>    \r\n  </div>\r\n  <hr>\r\n</div>\r\n -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DisplayCvdInfoComponent } from './display-cvd-info/display-cvd-info.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'data',\r\n    component: DisplayCvdInfoComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}