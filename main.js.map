{"version":3,"sources":["./src/environments/environment.ts","./src/app/data.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/get-cvdata.service.ts","./src/app/display-cvd-info/display-cvd-info.component.ts","./src/app/display-cvd-info/display-cvd-info.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint = 'http://localhost:3000/';\n  constructor(private http: HttpClient) { }\n\n  getIndiaData(): Observable<any> {\n    return this.http.get('https://api.covid19india.org/data.json').pipe((response) => response);\n  }\n\n  // response type is added here is: to saolve the problem of json parsing from http module.\n  getWorldData(): Observable<any> {\n    return this.http.get('https://covid.ourworldindata.org/data/owid-covid-data.json', {responseType: 'text'}).pipe((response) => response);\n  }\n\n  getNodejsWrldData(): Observable<any> {\n    const api = `${this.endpoint}/wrlddata`;\n    return this.http.get(api);\n  }\n\n  getIndianStateData(): Observable<any> {\n    return this.http.get('https://api.covid19india.org/v4/timeseries.json', {responseType: 'text'}).pipe((response) => response);\n  }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'plotCVDline';\n  messageTOSendP = 'Parent message';\n  messageFromChild = 'Nothing';\n\n  getMessage(message: string): void {\n     this.messageFromChild = message;\n  }\n\n}\n","<div>\n  <!--Message from child : {{ messageFromChild  }} -->\n\n  <!--<a href='data'>Show COVID Data Graphs</a>\n  &nbsp; &nbsp;\n  <a href='control'>Show Enable disable demo</a>\n  &nbsp; &nbsp;\n  <a href='graph'>Show Graph python demo</a> --!>\n  <!--<app-line-chart [receivedParentMessage] = 'title' (messagetosendC) = 'getMessage($event)' ></app-line-chart>-->\n\n  <app-display-cvd-info></app-display-cvd-info>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GetCVDataService } from './get-cvdata.service';\nimport { DataService } from './data.service';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DisplayCvdInfoComponent } from './display-cvd-info/display-cvd-info.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DisplayCvdInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ChartsModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [GetCVDataService, DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, Subscription, throwError} from 'rxjs';\nimport { catchError, map} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetCVDataService {\n\n  endpoint = 'http://localhost:3000/';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  listData = [];\n  constructor(public http: HttpClient, public router: Router) { }\n\n  getCVData(cntry): Observable<object> {\n    const api = `${this.endpoint}/cvd_newcases/${cntry}`;\n    return this.http.get(api);\n  }\n\n  getTimedata(cntry): Observable<object> {\n    const api = `${this.endpoint}/covid_19_timeseries/${cntry}`;\n    return this.http.get(api, { headers: this.headers });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DataService} from '../data.service';\nimport { TotalData } from '../modelcvdData';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-display-cvd-info',\n  templateUrl: './display-cvd-info.component.html',\n  styleUrls: ['./display-cvd-info.component.css']\n})\nexport class DisplayCvdInfoComponent implements OnInit, OnDestroy {\n  completeCVDData: TotalData;\n  newCases = [];\n  grNewCases = [];\n  categoryOfGraph = 'nc';\n  dates = [];\n\n  // ----Preparing graph data structure --------------------\n  lineChartData: ChartDataSets[] = [\n    { data: [], label: '' },\n  ];\n\n  lineChartLabels: Label[] = [];\n\n  lineChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Date'\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Number of New cases/Growth rate'\n        }\n      }]\n    }\n  };\n\n  lineChartColors: Color[] = [\n    {\n      borderColor: 'black',\n      backgroundColor: 'rgba(255,255,0,0.28)',\n    },\n  ];\n\n  lineChartLegend = true;\n  lineChartPlugins = [];\n  lineChartType = 'line';\n\n  isSubmitted = false;\n  selectedS = 'Nothing';\n  selectedSg = '';\n  lstdata = [];\n  numTotalcases = 10;\n  // ----\n\n  // -----World data structure ----\n  cntryList = [];\n  stateList = [];\n  stateDatalst = [];\n  lstOfLabels = ['Active', 'Confirmed', 'Death', 'Recovered'];\n  isSDataClicked = false;\n  completeWrldCVDdata: any;\n  completeIndianStateData: any;\n  selectedWS = '';\n  selectedWSGr = '';\n  selectIS = '';\n  dictOfWorldCntryDates = {};\n  dictOfStateData = {};\n  neSelectedCntry = 'India';\n  numMaxCaseLimit: number;\n  apiURL = 'https://www.techiediaries.com/api/data.json';\n\n  // --- Indian states data structure --\n\n  mapOfStateShorts =\n  {\n    'Andaman and Nicobar Islands': 'AN',\n    'Andhra Pradesh': 'AP',\n    'Arunachal Pradesh': 'AR',\n    'Assam': 'AS',\n    'Bihar': 'BR',\n    'Chandigarh': 'CH',\n    'Chhattisgarh': 'CT',\n    'Dadra and Nagar Haveli': 'DN',\n    'Daman and Diu': 'DD',\n    'Delhi': 'DL',\n    'Goa': 'GA',\n    'Gujarat': 'GJ',\n    'Haryana': 'HR',\n    'Himachal Pradesh': 'HP',\n    'Jammu and Kashmir': 'JK',\n    'Jharkhand': 'JH',\n    'Karnataka': 'KA',\n    'Kerala': 'KL',\n    'Lakshadweep': 'LD',\n    'Madhya Pradesh': 'MP',\n    'Maharashtra': 'MH',\n    'Manipur': 'MN',\n    'Meghalaya': 'ML',\n    'Mizoram': 'MZ',\n    'Nagaland': 'NL',\n    'Odisha': 'OR',\n    'Puducherry': 'PY',\n    'Punjab': 'PB',\n    'Rajasthan': 'RJ',\n    'Sikkim': 'SK',\n    'Tamil Nadu': 'TN',\n    'Telangana': 'TG',\n    'Tripura': 'TR',\n    'Uttar Pradesh': 'UP',\n    'Uttarakhand': 'UT',\n    'West Bengal': 'WB'\n  };\n\n  mapOfStateImages =\n  {\n    'India': 'https://www.clipartkey.com/mpngs/m/240-2404321_india-map-png-pic-map-of-india-hd.png',\n    'Andaman and Nicobar Islands': 'https://www.onefivenine.com/images/StateMaps/Andaman%20&%20Nicobar%20Islands.jpg',\n    'Andhra Pradesh': 'https://upload.wikimedia.org/wikipedia/commons/3/36/Location_map_India_Andhra_Pradesh.png',\n    'Arunachal Pradesh': 'https://www.arunachalpradesh.gov.in/wp-content/uploads/2017/08/anjaw.png',\n    'Assam': 'https://paintmaps.com/og_image/map_chart/map_chart_238c.png',\n    'Bihar': 'https://freepikpsd.com/wp-content/uploads/2019/10/bihar-map-png-8-Transparent-Images.png',\n    'Chandigarh': 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSw0yiG_ee--SPgNt7w64lP5n6fSeleHsLM1Q&usqp=CAU',\n    'Chhattisgarh': 'https://img.favpng.com/8/2/6/naya-raipur-chhattisgarh-board-of-secondary-education-states-and-territories-of-india-map-png-favpng-nE0EGwcmhPxhSTnaq8v597axM.jpg',\n    'Dadra and Nagar Haveli': 'https://i.pinimg.com/originals/ac/2a/83/ac2a832038303eb1f699661eac4fa086.png',\n    'Daman and Diu': 'https://i.pinimg.com/originals/d7/21/90/d7219074deabd84c6b4bbbeb9dd8c62e.png',\n    'Delhi': 'https://upload.wikimedia.org/wikipedia/commons/8/81/Delhi_Lok_Sabha_election_result.png',\n    'Goa': 'https://i.pinimg.com/originals/66/a7/84/66a784c992b1da5722de5bca3db20b29.png',\n    'Gujarat': 'https://diligentias.com/wp-content/uploads/2019/05/gujarat.png',\n    'Haryana': 'https://banner2.cleanpng.com/20180621/oqq/kisspng-haryana-map-punjab-hindi-ssc-combined-graduate-lev-5b2bee23b42788.0031033215296056677379.jpg',\n    'Himachal Pradesh': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Himachal_Pradesh_district_map.png/1200px-Himachal_Pradesh_district_map.png',\n    'Jammu and Kashmir': 'https://miro.medium.com/max/2612/1*ZsFrLv0hNtRfgZvo1nRM7w.png',\n    'Jharkhand': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Jharkhand.png/800px-Jharkhand.png',\n    'Karnataka': 'https://upload.wikimedia.org/wikipedia/commons/a/a1/Karnataka-district-blank.png',\n    'Kerala': 'https://upload.wikimedia.org/wikipedia/te/2/2a/Kerala-COVID-19-map.png',\n    'Lakshadweep': 'https://i.pinimg.com/originals/52/76/17/5276175936a828dcc5fc6ec6844775f3.png',\n    'Madhya Pradesh': 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/India_Madhya_Pradesh_location_map.svg/1280px-India_Madhya_Pradesh_location_map.svg.png',\n    'Maharashtra': 'https://upload.wikimedia.org/wikipedia/commons/c/c8/Maharashtra_locator_map.png',\n    'Manipur': 'https://upload.wikimedia.org/wikipedia/commons/5/53/Manipur_districts_as.png',\n    'Meghalaya': 'https://www.mapsofindia.com/maps/meghalaya/meghalaya-index-map-2020.jpg',\n    'Mizoram': 'https://www.bragitoff.com/wp-content/uploads/2015/12/mizoram.png',\n    'Nagaland': 'https://upload.wikimedia.org/wikipedia/commons/0/07/Nagaland_Map.png',\n    'Odisha': 'https://upload.wikimedia.org/wikipedia/commons/f/f0/Odisha.png',\n    'Puducherry': 'https://www.wisevoter.org/assets/images/states/puducherry.png',\n    'Punjab': 'https://punjab.gov.in/wp-content/uploads/2019/12/District-map_eng.png',\n    'Rajasthan': 'https://img.favpng.com/8/3/2/jaipur-bikaner-udaipur-jodhpur-map-png-favpng-RuP9r8sqShYHeQrDYx1M23GP9.jpg',\n    'Sikkim': 'https://i.pinimg.com/originals/2f/81/f8/2f81f8a362df281f0a98520b04005ffd.png',\n    'Tamil Nadu': 'https://www.pngitem.com/pimgs/m/527-5271275_tamil-nadu-district-map-2019-hd-png-download.png',\n    'Telangana': 'https://upload.wikimedia.org/wikipedia/commons/d/d6/Telangana-map-mal.png',\n    'Tripura': 'https://www.onefivenine.com/images/StateMaps/Tripura.jpg',\n    'Uttar Pradesh': 'https://pbdindia.gov.in/assets/images/uttar-pradesh-map.png',\n    'Uttarakhand': 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Uttarakhand_locator_map.svg/1250px-Uttarakhand_locator_map.svg.png',\n    'West Bengal': 'https://upload.wikimedia.org/wikipedia/commons/b/ba/Administrative_Divisions_Map_of_West_Bengal.png'\n  };\n  lstOfNwStateCases = [];\n  lstOfStateDates = [];\n  mapOfStateDtandCnfCases = {};\n\n\n  // ---- Graph data for states -------\n  lineChartDataStates: ChartDataSets[] = [\n    { data: [], label: '' },\n  ];\n\n  lineChartLabelsStates: Label[] = [];\n\n  lineChartOptionsStates: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: ''\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Number of New cases'\n        }\n      }]\n    }\n  };\n\n  lineChartColorsStates: Color[] = [\n    {\n      borderColor: 'black',\n      backgroundColor: 'rgba(255,255,0,0.28)',\n    },\n  ];\n\n  lineChartLegendStates = true;\n  lineChartPluginsStates = [];\n  lineChartTypeStates = 'line';\n\n  nSelectedState = '';\n  isUserClickedStateGraph = false;\n  // --------\n\n  constructor(private ds: DataService, private httpClient: HttpClient) { }\n\n  onSubmit(numVal): void {\n    this.categoryOfGraph = 'nc';\n    this.numTotalcases = numVal;\n    this.refreshData();\n  }\n\n  refreshData(): void {\n    if (this.categoryOfGraph === 'nc') {\n      this.lineChartData[0].data = this.newCases.slice((this.newCases.length - this.numTotalcases), this.newCases.length);\n      this.lineChartData[0].label = 'Covid Analysis data for country: ' + this.neSelectedCntry;\n      this.lineChartLabels = this.dates.slice((this.dates.length - this.numTotalcases), this.dates.length);\n    }\n    else if (this.categoryOfGraph === 'gr') {\n      this.lineChartData[0].data = this.grNewCases.slice((this.grNewCases.length - this.numTotalcases), this.grNewCases.length);\n      this.lineChartData[0].label = 'Growth rate Covid Analysis data for country: ' + this.neSelectedCntry;\n      this.lineChartLabels = this.dates.slice((this.dates.length - this.numTotalcases), this.dates.length);\n    }\n   }\n\n   refreshDataStates(): void {\n      this.lineChartDataStates[0].data = this.lstOfNwStateCases\n                                             .slice((this.lstOfNwStateCases.length - this.numTotalcases), this.lstOfNwStateCases.length);\n      this.lineChartDataStates[0].label =  'Covid Analysis data for Indian State: ' + this.nSelectedState;\n      this.lineChartLabelsStates = this.lstOfStateDates;\n      let len = this.lstOfStateDates.length;\n                                       // .slice((this.lstOfStateDates.length - this.numTotalcases), this.lstOfStateDates.length);\n      this.lineChartOptionsStates.scales.xAxes[0].scaleLabel.labelString = 'Data of last ' + len + ' days';\n    }\n\n  onSubmitWorldData(cntryName): void {\n     this.neSelectedCntry = cntryName;\n     this.categoryOfGraph = 'nc';\n     if (cntryName !== undefined) {\n        this.newCases = this.dictOfWorldCntryDates[cntryName][`nw_cases`];\n        this.dates = this.dictOfWorldCntryDates[cntryName][`dt`];\n        this.refreshData();\n     }\n  }\n\n  onSubmitWorldGrData(cntryName): void {\n    this.newCases = this.dictOfWorldCntryDates[cntryName][`nw_cases`];\n    this.dates = this.dictOfWorldCntryDates[cntryName][`dt`];\n    for ( let i = 0; i <= this.newCases.length; i++) {\n      if ( (i + 1) < this.newCases.length) {\n       const grTemp = this.newCases[i + 1] / this.newCases[i];\n       this.grNewCases.push(grTemp);\n      }\n    }\n    this.categoryOfGraph = 'gr';\n    this.refreshData();\n  }\n\n  onSubmitStateData(state): void {\n    this.isUserClickedStateGraph = true;\n    const tmpVal = this.mapOfStateShorts[state];\n    this.nSelectedState = state;\n    this.lstOfNwStateCases = this.mapOfStateDtandCnfCases[tmpVal][`nw_cases`];\n    this.lstOfStateDates = [];\n    for (let i = 0; i < this.numTotalcases; i++) {\n      this.lstOfStateDates.push(i + 1);\n    }\n    // this.mapOfStateDtandCnfCases[tmpVal][`dt`];\n    this.refreshDataStates();\n  }\n\n  toggleGraphState(): void {\n    this.isUserClickedStateGraph = false;\n  }\n\n  refreshState(stateName): void {\n    this.isSDataClicked = true;\n    this.stateDatalst = this.dictOfStateData[stateName];\n  }\n\n  ngOnInit(): void {\n    this.ds.getIndiaData().subscribe(response => {\n      this.completeCVDData = response;\n      // console.log(this.completeCVDData);\n\n      for (const i of  Object.keys(this.completeCVDData)) {\n        // console.log('For the key :', i);\n        // console.log(this.completeCVDData[i]);\n        if ( i === 'statewise') {\n           for ( const data of this.completeCVDData[i] ) {\n              this.stateList.push(data[`state`]);\n              this.dictOfStateData[data[`state`]] = [];\n              this.dictOfStateData[data[`state`]].push(data[`active`]);\n              this.dictOfStateData[data[`state`]].push(data[`confirmed`]);\n              this.dictOfStateData[data[`state`]].push(data[`deaths`]);\n              this.dictOfStateData[data[`state`]].push(data[`recovered`]);\n           }\n        }\n        if (i === 'cases_time_series') {\n          for (const val of this.completeCVDData[i]) {\n            // console.log('Val:');\n           // console.log(val[`dailyconfirmed`]);\n           // console.log(val[`dateymd`]);\n            if (val[`dailyconfirmed`] !== undefined) {\n              this.newCases.push(val[`dailyconfirmed`]);\n              this.dates.push(val[`dateymd`]);\n            }\n            else {\n              this.newCases.push(0);\n              this.dates.push(val[`dateymd`]);\n            }\n          }\n        }\n      }\n      // this.lineChartData[0].data = this.newCases.slice((this.newCases.length - this.numTotalcases), this.newCases.length);\n      // this.lineChartData[0].label = 'CVD Anal data for country: ' + 'India';\n\n      // this.lineChartLabels = this.dates.slice((this.dates.length - this.numTotalcases), this.dates.length);\n      this.categoryOfGraph = 'nc';\n      this.refreshData();\n    });\n\n    // -- Getting world data for demonstrating world data and multiple chaining or error handling.\n\n    this.ds.getWorldData().pipe(\n      catchError(err => {\n         console.log('Throwing error', err);\n         return throwError(err);\n      }),\n      catchError(err => {\n        console.log('Throwing error again:', err);\n        return throwError(err);\n      })\n\n    ).subscribe(result => {\n        // console.log(result);\n        this.completeWrldCVDdata = JSON.parse(result);\n\n        for (const keys of Object.keys(this.completeWrldCVDdata)) {\n          this.cntryList.push(this.completeWrldCVDdata[keys][`location`]);\n          // console.log(this.completeWrldCVDdata[keys][`location`]);\n\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]] =  {};\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`nw_cases`] = [];\n          this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`dt`] = [];\n          for (const vals of this.completeWrldCVDdata[keys][`data`]) {\n            this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`nw_cases`].push(vals[`new_cases`]);\n            this.dictOfWorldCntryDates[this.completeWrldCVDdata[keys][`location`]][`dt`].push(vals[`date`]);\n          }\n        }\n    }, err => {\n       console.log('World Data Erorr: ', err);\n    }, () => {\n      console.log('HTTP request completed');\n    });\n\n    // --------- Other urls for demonstrating the promise and async and await.\n\n    const promised = this.httpClient.get(this.apiURL).toPromise();\n    console.log(promised);\n    promised.then( (data) => {\n      // console.log('Promise resolved with: ', data);\n    }).catch((err) => {\n      console.log('Error: ', err);\n    });\n\n\n    // ---- Nodejs world data ----\n\n    /*this.ds.getNodejsWrldData().subscribe( (response) => {\n       console.log('Nodejs World data : ');\n       console.log(response);\n    });*/\n\n    // --- Indian statewise data -----\n\n    this.ds.getIndianStateData().pipe(\n      catchError(err => {\n         console.log('Throwing error', err);\n         return throwError(err);\n      }),\n      catchError(err => {\n        console.log('Throwing error again:', err);\n        return throwError(err);\n      })\n    ).subscribe((result) => {\n       this.completeIndianStateData = JSON.parse(result);\n       for (const stateData of Object.keys(this.completeIndianStateData)) {\n          this.mapOfStateDtandCnfCases[stateData] = {};\n          this.mapOfStateDtandCnfCases[stateData][`dt`] = [];\n          this.mapOfStateDtandCnfCases[stateData][`nw_cases`] = [];\n          for (const datesob of Object.keys(this.completeIndianStateData[stateData][`dates`])) {\n              this.mapOfStateDtandCnfCases[stateData][`dt`].push(datesob);\n              for (const objdelta of Object.keys(this.completeIndianStateData[stateData][`dates`][datesob])) {\n                   if ( objdelta === 'delta') {\n                      this.mapOfStateDtandCnfCases[stateData][`nw_cases`]\n                          .push(this.completeIndianStateData[stateData][`dates`][datesob][objdelta][`confirmed`]);\n                   }\n              }\n          }\n       }\n       // console.log('Map of state and data :');\n       // console.log(this.mapOfStateDtandCnfCases);\n    }, err => {\n       console.log('Indian state Data Erorr: ', err);\n    }, () => {\n       console.log('HTTP request completed: for Indian state');\n    });\n\n\n  }\n\n  ngOnDestroy(): void {\n     this.completeWrldCVDdata.unsubscribe();\n  }\n\n}\n","<h2>\n  <p align=\"center\" style=\"color:blue\"> COVID-19 ANALYSIS !!</p>\n</h2>\n<hr>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"column\">\n      <label for=\"quantity\" style=\"color: brown; font-weight: bold;\">Choose range of days (between 10 and 260):</label>\n      <br>\n      <input type=\"number\" id=\"qantity\" name=\"quantity\" value=\"10\" min=\"10\" max=\"260\" #quantity>\n      &nbsp; &nbsp;\n      <button (click)=\"onSubmit(quantity.value)\" class=\"btn btn-primary\">Enter</button>\n    </div>\n    <div class=\"column\">\n      <label style=\"color: brown; font-weight: bold;\">Visualize world info: </label>\n      <span *ngIf=\" this.completeWrldCVDdata === undefined\"> Loading data .... </span>\n      <br>\n      <select [(ngModel)]=\"selectedWS\" #cnName [disabled]=\"this.completeWrldCVDdata === undefined \"\n        (change)=\"onSubmitWorldData(selectedWS)\">\n        <option value=\"\">Choose your country</option>\n        <option *ngFor=\"let cntry of cntryList\" [ngValue]=\"cntry\">{{cntry}}\n        </option>\n      </select>\n      &nbsp;\n      <button (click)=\"onSubmitWorldGrData(selectedWS)\" class=\"btn btn-primary\">New Cases Growth Rate</button>\n    </div>\n  </div>\n  <br> <br>\n  <canvas baseChart [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\"\n    [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" [plugins]=\"lineChartPlugins\"\n    width=\"200\" height=\"70\">\n  </canvas>\n  <hr>\n  <label style=\"color: brown; font-weight: bold;\">Choose Indian state to visualize specific info: </label>\n  <br>\n  <span *ngIf=\" this.completeCVDData === undefined\"> Loading data .... </span>\n  <select [(ngModel)]=\"selectIS\" #cnName [disabled]=\"this.completeCVDData === undefined\"\n    (change)=\"refreshState(selectIS)\">\n    <option value=\"\">Choose your state</option>\n    <option *ngFor=\"let state of stateList\" [ngValue]=\"state\">{{state}}\n    </option>\n  </select>\n  <!--<table style=\"padding-left: 20px;\" class=\"table\">\n      <tr *ngFor=\"let data of stateDatalst; let i = index\">\n        <li><label\n            [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\n            {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li>\n      </tr>\n    </table> -->\n  <br>\n  <div class=\"row\" *ngIf=\"isSDataClicked\">\n    <div class=\"column\" style=\"background-color: whitesmoke;\">\n      <img src='{{ mapOfStateImages.India }}' width=\"150\" height=\"250\" (mouseover)=\"this.style.cursor='hand'\"\n        (click)=\"onSubmitStateData(selectIS)\" />\n    </div>\n    <div class=\"column\" style=\"background-color: whitesmoke;\">\n      <img width=\"20\" height=\"20\"\n        src=\"https://www.pngitem.com/pimgs/m/514-5145836_transparent-blinking-clipart-animated-arrow-png-gif-png.png\" />\n    </div>\n    <div class=\"column\" style=\"background-color: whitesmoke;\">\n      <img src='{{ mapOfStateImages[selectIS] }}' width=\"70\" height=\"90\"\n        (click)=\"onSubmitStateData(selectIS)\" />\n      <br>\n      <div class=\"info\" *ngIf=\" selectIS !== 'Total' \">\n        <p><strong>Note!</strong> Click on map for <br> time series data.</p>\n      </div>\n    </div>\n    <div class=\"column\" style=\"background-color:whitesmoke;\">\n      <p style=\"font-weight: bold;\">Data of Indian state of: <br> {{ selectIS }}</p> &nbsp;\n      <li *ngFor=\"let data of stateDatalst; let i = index\">\n        <label\n          [ngStyle]=\"{'color': (this.lstOfLabels[i] === 'Active') ? 'red' : (this.lstOfLabels[i] === 'Confirmed') ? 'orange' : (this.lstOfLabels[i] === 'Death') ? 'red' : (this.lstOfLabels[i] === 'Recovered') ? 'green': '' }\">\n          {{ this.lstOfLabels[i] }} : </label>> {{ data }}</li>\n    </div>\n    <div class=\"column\" *ngIf=\"isUserClickedStateGraph && selectIS !== 'Total'\" style=\"background-color: whitesmoke;\">\n      <button *ngIf=\"isUserClickedStateGraph\" (click)=\"toggleGraphState()\" class=\"btn btn-primary\">Hide</button>\n      <canvas baseChart [datasets]=\"lineChartDataStates\" [labels]=\"lineChartLabelsStates\"\n        [options]=\"lineChartOptionsStates\" [colors]=\"lineChartColorsStates\" [legend]=\"lineChartLegendStates\"\n        [chartType]=\"lineChartTypeStates\" [plugins]=\"lineChartPluginsStates\" width=\"400\" height=\"250\">\n      </canvas>\n    </div>\n  </div>\n  <hr>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DisplayCvdInfoComponent } from './display-cvd-info/display-cvd-info.component';\nconst routes: Routes = [\n  {\n    path: 'data',\n    component: DisplayCvdInfoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}